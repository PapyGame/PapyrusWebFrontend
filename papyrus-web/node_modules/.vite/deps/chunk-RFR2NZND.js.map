{
  "version": 3,
  "sources": ["../../../../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js", "../../../../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js", "../../../../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js", "../../../../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);", "import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');", "import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');", "import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');"],
  "mappings": "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",
  "names": ["React", "React", "React", "styles", "Checkbox", "PropTypes"]
}
