{
  "version": 3,
  "sources": ["../../../../node_modules/@eclipse-sirius/sirius-components-widget-reference/dist/sirius-components-widget-reference.es.js"],
  "sourcesContent": ["import { jsxs, jsx, Fragment } from \"react/jsx-runtime\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { getCSSColor, useSelection, IconOverlay, useMultiToast, SelectionContext, DRAG_SOURCES_TYPE, useDeletionConfirmationDialog } from \"@eclipse-sirius/sirius-components-core\";\nimport { getTextDecorationLineValue, useClickHandler, PropertySectionLabel } from \"@eclipse-sirius/sirius-components-forms\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HelpOutlineOutlined from \"@material-ui/icons/HelpOutlineOutlined\";\nimport { useState, useRef, useEffect } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { gql, useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { TreeView, splitText } from \"@eclipse-sirius/sirius-components-trees\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { useMachine } from \"@xstate/react\";\nimport { Machine, assign } from \"xstate\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\nconst ReferenceIcon = (props) => {\n  return /* @__PURE__ */ jsxs(\n    SvgIcon,\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 24 24\",\n      \"aria-labelledby\": \"title\",\n      \"aria-describedby\": \"desc\",\n      role: \"img\",\n      ...props,\n      children: [\n        /* @__PURE__ */ jsx(\"g\", { children: /* @__PURE__ */ jsx(\"rect\", { fill: \"none\", height: \"24\", width: \"24\" }) }),\n        /* @__PURE__ */ jsxs(\"g\", { children: [\n          /* @__PURE__ */ jsx(\"polygon\", { points: \"17,17 22,12 17,7 15.59,8.41 18.17,11 9,11 9,13 18.17,13 15.59,15.59\" }),\n          /* @__PURE__ */ jsx(\"path\", { d: \"M19,19H5V5h14v2h2V5c0-1.1-0.89-2-2-2H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.11,0,2-0.9,2-2v-2h-2V19z\" })\n        ] })\n      ]\n    }\n  );\n};\nconst useStyles$4 = makeStyles((theme) => ({\n  referenceValueStyle: {\n    color: ({ color }) => color ? getCSSColor(color, theme) : void 0,\n    fontSize: ({ fontSize }) => fontSize ? fontSize : void 0,\n    fontStyle: ({ italic }) => italic ? \"italic\" : \"unset\",\n    fontWeight: ({ bold }) => bold ? \"bold\" : \"unset\",\n    textDecorationLine: ({ underline, strikeThrough }) => getTextDecorationLineValue(underline ?? null, strikeThrough ?? null)\n  },\n  selected: {\n    color: theme.palette.primary.main\n  },\n  propertySectionLabel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  propertySection: {\n    overflowX: \"hidden\"\n  }\n}));\nconst ReferencePreview = ({ widget }) => {\n  var _a, _b, _c, _d, _e, _f;\n  const props = {\n    color: ((_a = widget.style) == null ? void 0 : _a.color) ?? null,\n    fontSize: ((_b = widget.style) == null ? void 0 : _b.fontSize) ?? null,\n    italic: ((_c = widget.style) == null ? void 0 : _c.italic) ?? null,\n    bold: ((_d = widget.style) == null ? void 0 : _d.bold) ?? null,\n    underline: ((_e = widget.style) == null ? void 0 : _e.underline) ?? null,\n    strikeThrough: ((_f = widget.style) == null ? void 0 : _f.strikeThrough) ?? null\n  };\n  const classes = useStyles$4(props);\n  const [selected, setSelected] = useState(false);\n  const { selection } = useSelection();\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current && selection.entries.find((entry) => entry.id === widget.id)) {\n      ref.current.focus();\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n  }, [selection, widget]);\n  const options = [{ label: \"Referenced Value\", iconURL: \"/api/images/icons/full/obj16/Entity.svg\" }];\n  return /* @__PURE__ */ jsxs(\"div\", { className: classes.propertySection, children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: classes.propertySectionLabel, children: [\n      /* @__PURE__ */ jsx(Typography, { variant: \"subtitle2\", className: selected ? classes.selected : \"\", children: widget.label }),\n      widget.hasHelpText ? /* @__PURE__ */ jsx(HelpOutlineOutlined, { color: \"secondary\", style: { marginLeft: 8, fontSize: 16 } }) : null\n    ] }),\n    /* @__PURE__ */ jsx(\n      Autocomplete,\n      {\n        \"data-testid\": widget.label,\n        multiple: true,\n        filterSelectedOptions: true,\n        disabled: false,\n        open: false,\n        loading: false,\n        options,\n        value: options,\n        disableClearable: true,\n        renderTags: (value, getTagProps) => value.map(({ label, iconURL }, index) => /* @__PURE__ */ jsx(\n          Chip,\n          {\n            classes: { label: classes.referenceValueStyle },\n            label,\n            \"data-testid\": `reference-value-${label}`,\n            icon: /* @__PURE__ */ jsx(\"div\", { children: /* @__PURE__ */ jsx(IconOverlay, { iconURL: [iconURL], alt: \"\" }) }),\n            ...getTagProps({ index })\n          },\n          index\n        )),\n        renderInput: (params) => {\n          var _a2;\n          return /* @__PURE__ */ jsx(\n            TextField,\n            {\n              inputRef: ref,\n              ...params,\n              variant: \"standard\",\n              error: widget.diagnostics.length > 0,\n              helperText: (_a2 = widget.diagnostics[0]) == null ? void 0 : _a2.message,\n              InputProps: {\n                readOnly: true,\n                ...params.InputProps,\n                endAdornment: /* @__PURE__ */ jsxs(Fragment, { children: [\n                  params.InputProps.endAdornment,\n                  /* @__PURE__ */ jsxs(InputAdornment, { position: \"end\", className: classes.endAdornmentButton, children: [\n                    /* @__PURE__ */ jsx(\n                      IconButton,\n                      {\n                        \"aria-label\": \"edit\",\n                        size: \"small\",\n                        title: \"Edit\",\n                        disabled: false,\n                        \"data-testid\": `${widget.label}-more`,\n                        children: /* @__PURE__ */ jsx(MoreHorizIcon, {})\n                      }\n                    ),\n                    /* @__PURE__ */ jsx(\n                      IconButton,\n                      {\n                        \"aria-label\": \"add\",\n                        size: \"small\",\n                        title: \"Create an object\",\n                        disabled: false,\n                        \"data-testid\": `${widget.label}-add`,\n                        children: /* @__PURE__ */ jsx(AddIcon, {})\n                      }\n                    ),\n                    /* @__PURE__ */ jsx(\n                      IconButton,\n                      {\n                        \"aria-label\": \"clear\",\n                        size: \"small\",\n                        title: \"Clear\",\n                        disabled: false,\n                        \"data-testid\": `${widget.label}-clear`,\n                        children: /* @__PURE__ */ jsx(DeleteIcon, {})\n                      }\n                    )\n                  ] })\n                ] })\n              }\n            }\n          );\n        }\n      }\n    )\n  ] });\n};\nconst useStyles$3 = makeStyles((theme) => ({\n  optionLabel: {\n    paddingLeft: theme.spacing(0.5)\n  },\n  referenceValueStyle: {\n    color: ({ color }) => color ? getCSSColor(color, theme) : void 0,\n    fontSize: ({ fontSize }) => fontSize ? fontSize : void 0,\n    fontStyle: ({ italic }) => italic ? \"italic\" : \"unset\",\n    fontWeight: ({ bold }) => bold ? \"bold\" : \"unset\",\n    textDecorationLine: ({ underline, strikeThrough }) => getTextDecorationLineValue(underline ?? null, strikeThrough ?? null)\n  },\n  endAdornmentButton: {\n    position: \"absolute\",\n    display: \"flex\",\n    right: theme.spacing(2.5),\n    \"& > *\": {\n      padding: 0\n    }\n  }\n}));\nconst getReferenceValueOptionsQuery$1 = gql`\n  query getReferenceValueOptions($editingContextId: ID!, $representationId: ID!, $referenceWidgetId: ID!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        representation(representationId: $representationId) {\n          description {\n            ... on FormDescription {\n              referenceValueOptions(referenceWidgetId: $referenceWidgetId) {\n                id\n                label\n                kind\n                iconURL\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst isFormDescription$1 = (representationDescription) => representationDescription.__typename === \"FormDescription\";\nconst ValuedReferenceAutocomplete = ({\n  editingContextId,\n  formId,\n  widget,\n  readOnly,\n  onDragEnter,\n  onDragOver,\n  onDrop,\n  onMoreClick,\n  onCreateClick,\n  optionClickHandler,\n  clearReference,\n  removeReferenceValue,\n  addReferenceValues,\n  setReferenceValue\n}) => {\n  var _a, _b, _c, _d, _e, _f;\n  const props = {\n    color: ((_a = widget.style) == null ? void 0 : _a.color) ?? null,\n    fontSize: ((_b = widget.style) == null ? void 0 : _b.fontSize) ?? null,\n    italic: ((_c = widget.style) == null ? void 0 : _c.italic) ?? null,\n    bold: ((_d = widget.style) == null ? void 0 : _d.bold) ?? null,\n    underline: ((_e = widget.style) == null ? void 0 : _e.underline) ?? null,\n    strikeThrough: ((_f = widget.style) == null ? void 0 : _f.strikeThrough) ?? null\n  };\n  const classes = useStyles$3(props);\n  const theme = useTheme();\n  const { addErrorMessage } = useMultiToast();\n  const [state, setState] = useState({ open: false, options: null });\n  const loading = state.open && state.options === null;\n  const [\n    getReferenceValueOptions,\n    {\n      loading: childReferenceValueOptionsLoading,\n      data: childReferenceValueOptionsData,\n      error: childReferenceValueOptionsError\n    }\n  ] = useLazyQuery(\n    getReferenceValueOptionsQuery$1\n  );\n  useEffect(() => {\n    if (!childReferenceValueOptionsLoading) {\n      if (childReferenceValueOptionsError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (childReferenceValueOptionsData) {\n        const representationDescription = childReferenceValueOptionsData.viewer.editingContext.representation.description;\n        if (isFormDescription$1(representationDescription)) {\n          setState((prevState) => {\n            return {\n              ...prevState,\n              options: representationDescription.referenceValueOptions\n            };\n          });\n        }\n      }\n    }\n  }, [childReferenceValueOptionsLoading, childReferenceValueOptionsData, childReferenceValueOptionsError]);\n  useEffect(() => {\n    if (loading) {\n      getReferenceValueOptions({\n        variables: {\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id\n        }\n      });\n    }\n  }, [loading]);\n  const handleRemoveReferenceValue = (updatedValues) => {\n    widget.referenceValues.forEach((value) => {\n      if (!updatedValues.find((updateValue) => updateValue.id === value.id)) {\n        removeReferenceValue(value.id);\n      }\n    });\n  };\n  const getOnlyNewValueIds = (updatedValues) => {\n    var _a2;\n    if (((_a2 = widget.referenceValues) == null ? void 0 : _a2.length) > 0) {\n      return updatedValues.filter((updatedValue) => widget.referenceValues.some((value) => value.id !== updatedValue.id)).map((value) => value.id);\n    } else {\n      return updatedValues.map((value) => value.id);\n    }\n  };\n  const handleAutocompleteChange = (_event, updatedValues, reason) => {\n    if (reason === \"remove-option\") {\n      handleRemoveReferenceValue(updatedValues);\n    } else {\n      const newValueIds = getOnlyNewValueIds(updatedValues);\n      if (widget.reference.manyValued) {\n        addReferenceValues(newValueIds);\n      } else {\n        setReferenceValue(newValueIds[0] ?? null);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!state.open) {\n      setState((prevState) => {\n        return {\n          ...prevState,\n          options: null\n        };\n      });\n    }\n  }, [widget]);\n  let placeholder;\n  if (widget.reference.manyValued) {\n    placeholder = \"Values\";\n  } else {\n    placeholder = widget.referenceValues.length > 0 ? \"\" : \"Value\";\n  }\n  return /* @__PURE__ */ jsx(\n    Autocomplete,\n    {\n      \"data-testid\": widget.label,\n      multiple: true,\n      filterSelectedOptions: true,\n      disabled: readOnly || widget.readOnly,\n      open: state.open,\n      onOpen: () => setState((prevState) => {\n        return {\n          ...prevState,\n          open: true\n        };\n      }),\n      onClose: () => setState((prevState) => {\n        return {\n          ...prevState,\n          open: false\n        };\n      }),\n      loading,\n      options: state.options || [],\n      getOptionLabel: (option) => option.label,\n      value: widget.referenceValues,\n      getOptionSelected: (option, value) => option.id === value.id,\n      onChange: handleAutocompleteChange,\n      renderOption: (option) => /* @__PURE__ */ jsxs(Fragment, { children: [\n        /* @__PURE__ */ jsx(IconOverlay, { iconURL: option.iconURL, alt: option.kind }),\n        /* @__PURE__ */ jsx(\"span\", { className: classes.optionLabel, \"data-testid\": `option-${option.label}`, children: option.label })\n      ] }),\n      disableClearable: true,\n      renderTags: (value, getTagProps) => value.map((option, index) => /* @__PURE__ */ jsx(\n        Chip,\n        {\n          classes: { label: classes.referenceValueStyle },\n          label: option.label,\n          \"data-testid\": `reference-value-${option.label}`,\n          icon: /* @__PURE__ */ jsx(\"div\", { children: /* @__PURE__ */ jsx(IconOverlay, { iconURL: option.iconURL, alt: option.kind }) }),\n          clickable: !readOnly && !widget.readOnly,\n          onClick: () => optionClickHandler(option),\n          ...getTagProps({ index })\n        },\n        index\n      )),\n      renderInput: (params) => {\n        var _a2;\n        return /* @__PURE__ */ jsx(\n          TextField,\n          {\n            ...params,\n            variant: \"standard\",\n            placeholder,\n            error: widget.diagnostics.length > 0,\n            helperText: (_a2 = widget.diagnostics[0]) == null ? void 0 : _a2.message,\n            InputProps: {\n              ...params.InputProps,\n              style: { paddingRight: theme.spacing(10) },\n              // Offset required to prevent values from being displayed below the buttons\n              endAdornment: /* @__PURE__ */ jsxs(Fragment, { children: [\n                params.InputProps.endAdornment,\n                /* @__PURE__ */ jsxs(InputAdornment, { position: \"end\", className: classes.endAdornmentButton, children: [\n                  /* @__PURE__ */ jsx(\n                    IconButton,\n                    {\n                      \"aria-label\": \"edit\",\n                      size: \"small\",\n                      title: \"Edit\",\n                      disabled: readOnly || widget.readOnly,\n                      \"data-testid\": `${widget.label}-more`,\n                      onClick: onMoreClick,\n                      children: /* @__PURE__ */ jsx(MoreHorizIcon, {})\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\n                    IconButton,\n                    {\n                      \"aria-label\": \"add\",\n                      size: \"small\",\n                      title: \"Create an object\",\n                      disabled: readOnly || widget.readOnly,\n                      \"data-testid\": `${widget.label}-add`,\n                      onClick: onCreateClick,\n                      children: /* @__PURE__ */ jsx(AddIcon, {})\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\n                    IconButton,\n                    {\n                      \"aria-label\": \"clear\",\n                      size: \"small\",\n                      title: \"Clear\",\n                      disabled: readOnly || widget.readOnly,\n                      \"data-testid\": `${widget.label}-clear`,\n                      onClick: clearReference,\n                      children: /* @__PURE__ */ jsx(DeleteIcon, {})\n                    }\n                  )\n                ] })\n              ] })\n            }\n          }\n        );\n      },\n      onDragEnter,\n      onDragOver,\n      onDrop\n    }\n  );\n};\nconst useFilterBarStyles = makeStyles((theme) => ({\n  filterbar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"hidden\"\n  },\n  textfield: {\n    height: theme.spacing(3),\n    fontSize: theme.typography.fontSize\n  },\n  placeHolderIcon: {\n    color: theme.palette.text.disabled\n  }\n}));\nconst ModelBrowserFilterBar = ({ onTextChange, onTextClear, text }) => {\n  const classes = useFilterBarStyles();\n  return /* @__PURE__ */ jsx(\"div\", { className: classes.filterbar, children: /* @__PURE__ */ jsx(\n    TextField,\n    {\n      id: \"filterbar-textfield\",\n      \"data-testid\": \"filterbar-textfield\",\n      name: \"filterbar-textfield\",\n      placeholder: \"Type to filter\",\n      spellCheck: false,\n      size: \"small\",\n      margin: \"none\",\n      autoFocus: true,\n      multiline: false,\n      fullWidth: true,\n      value: text,\n      onChange: onTextChange,\n      InputProps: {\n        startAdornment: /* @__PURE__ */ jsx(InputAdornment, { position: \"start\", children: /* @__PURE__ */ jsx(SearchIcon, { fontSize: \"small\", className: classes.placeHolderIcon }) }),\n        endAdornment: /* @__PURE__ */ jsx(InputAdornment, { position: \"end\", children: /* @__PURE__ */ jsx(IconButton, { \"data-testid\": \"filterbar-clear-button\", \"aria-label\": \"clear\", size: \"small\", onClick: onTextClear, children: /* @__PURE__ */ jsx(ClearIcon, { fontSize: \"small\" }) }) }),\n        className: classes.textfield\n      }\n    }\n  ) });\n};\nconst useTreeStyle = makeStyles((theme) => ({\n  title: {\n    opacity: 0.6,\n    fontSize: theme.typography.caption.fontSize\n  },\n  borderStyle: {\n    border: \"1px solid\",\n    borderColor: theme.palette.grey[500],\n    height: 300,\n    overflow: \"auto\"\n  }\n}));\nconst ModelBrowserTreeView = ({\n  editingContextId,\n  widget,\n  markedItemIds,\n  enableMultiSelection,\n  title,\n  leafType,\n  ownerKind\n}) => {\n  const classes = useTreeStyle();\n  const [state, setState] = useState({ filterBarText: \"\" });\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(\n      ModelBrowserFilterBar,\n      {\n        onTextChange: (event) => setState({ filterBarText: event.target.value }),\n        onTextClear: () => setState({ filterBarText: \"\" }),\n        text: state.filterBarText\n      }\n    ),\n    /* @__PURE__ */ jsx(\"span\", { className: classes.title, children: title }),\n    /* @__PURE__ */ jsx(\"div\", { className: classes.borderStyle, children: /* @__PURE__ */ jsx(\n      TreeView,\n      {\n        editingContextId,\n        readOnly: true,\n        treeId: `modelBrowser://${leafType}?ownerKind=${encodeURIComponent(\n          ownerKind\n        )}&targetType=${encodeURIComponent(widget.reference.referenceKind)}&ownerId=${widget.ownerId}&descriptionId=${encodeURIComponent(widget.descriptionId)}&isContainment=${widget.reference.containment}`,\n        enableMultiSelection,\n        synchronizedWithSelection: true,\n        textToFilter: state.filterBarText,\n        textToHighlight: state.filterBarText,\n        markedItemIds\n      }\n    ) })\n  ] });\n};\nconst useBrowserModalStyles = makeStyles((_) => ({\n  content: {\n    height: 400\n  }\n}));\nconst BrowseModal = ({ editingContextId, widget, onClose }) => {\n  const styles = useBrowserModalStyles();\n  const [browserSelection, setBrowserSelection] = useState({ entries: widget.referenceValues });\n  return /* @__PURE__ */ jsx(\n    SelectionContext.Provider,\n    {\n      value: {\n        selection: browserSelection,\n        setSelection: setBrowserSelection\n      },\n      children: /* @__PURE__ */ jsxs(\n        Dialog,\n        {\n          open: true,\n          onClose: () => onClose(null),\n          \"aria-labelledby\": \"dialog-title\",\n          fullWidth: true,\n          \"data-testid\": \"browse-modal\",\n          children: [\n            /* @__PURE__ */ jsx(DialogTitle, { id: \"dialog-title\", children: \"Select an object\" }),\n            /* @__PURE__ */ jsx(DialogContent, { className: styles.content, children: /* @__PURE__ */ jsx(\n              ModelBrowserTreeView,\n              {\n                editingContextId,\n                widget,\n                markedItemIds: [],\n                enableMultiSelection: widget.reference.manyValued,\n                title: \"Choices\",\n                leafType: \"reference\",\n                ownerKind: widget.reference.ownerKind\n              }\n            ) }),\n            /* @__PURE__ */ jsx(DialogActions, { children: /* @__PURE__ */ jsx(\n              Button,\n              {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"button\",\n                \"data-testid\": \"select-value\",\n                onClick: () => {\n                  const selectedElement = (browserSelection == null ? void 0 : browserSelection.entries.length) > 0 ? browserSelection.entries[0] : null;\n                  if (selectedElement) {\n                    onClose(selectedElement.id);\n                  }\n                },\n                children: \"Select\"\n              }\n            ) })\n          ]\n        }\n      )\n    }\n  );\n};\nconst isCreateElementSuccessPayload = (payload) => {\n  return payload.__typename === \"CreateElementInReferenceSuccessPayload\";\n};\nconst createModalMachine = Machine(\n  {\n    id: \"CreateModal\",\n    type: \"parallel\",\n    context: {\n      domains: [],\n      selectedDomainId: \"\",\n      selectedChildCreationDescriptionId: \"\",\n      creationDescriptions: [],\n      newObjectId: null,\n      containerSelected: { entries: [] },\n      containerId: null,\n      containerKind: null\n    },\n    states: {\n      createModal: {\n        initial: \"selectContainmentMode\",\n        states: {\n          selectContainmentMode: {\n            on: {\n              CHANGE_CONTAINMENT_MODE: [\n                {\n                  cond: \"isContainmentReference\",\n                  target: \"loadingChildCreationDescription\",\n                  actions: \"updateContainer\"\n                },\n                {\n                  target: \"selectContainer\"\n                }\n              ]\n            }\n          },\n          selectContainer: {\n            on: {\n              CHANGE_CONTAINER_SELECTION: [\n                {\n                  actions: \"updateContainerSelection\",\n                  cond: \"isRootContainer\",\n                  target: \"loadingDomains\"\n                },\n                {\n                  actions: \"updateContainerSelection\",\n                  target: \"loadingChildCreationDescription\"\n                }\n              ]\n            }\n          },\n          loadingChildCreationDescription: {\n            on: {\n              HANDLE_FETCHED_CHILD_CREATION_DESCRIPTIONS: [\n                {\n                  target: \"validForChild\",\n                  actions: \"updateChildCreationDescriptions\"\n                }\n              ],\n              CHANGE_CONTAINER_SELECTION: [\n                {\n                  actions: \"updateContainerSelection\",\n                  cond: \"isRootContainer\",\n                  target: \"loadingDomains\"\n                },\n                {\n                  actions: \"updateContainerSelection\",\n                  target: \"loadingChildCreationDescription\"\n                }\n              ]\n            }\n          },\n          loadingDomains: {\n            on: {\n              HANDLE_FETCHED_DOMAINS: [\n                {\n                  actions: \"updateDomains\",\n                  target: \"loadingRootObjectCreationDescriptions\"\n                }\n              ],\n              CHANGE_CONTAINER_SELECTION: [\n                {\n                  actions: \"updateContainerSelection\",\n                  cond: \"isRootContainer\",\n                  target: \"loadingDomains\"\n                },\n                {\n                  actions: \"updateContainerSelection\",\n                  target: \"loadingChildCreationDescription\"\n                }\n              ]\n            }\n          },\n          loadingRootObjectCreationDescriptions: {\n            on: {\n              CHANGE_DOMAIN: [\n                {\n                  actions: \"updateDomain\"\n                }\n              ],\n              HANDLE_FETCHED_ROOT_OBJECT_CREATION_DESCRIPTIONS: [\n                {\n                  target: \"validForRoot\",\n                  actions: \"updateRootChildCreationDescriptions\"\n                }\n              ]\n            }\n          },\n          validForChild: {\n            on: {\n              CHANGE_CONTAINER_SELECTION: [\n                {\n                  actions: \"updateContainerSelection\",\n                  cond: \"isRootContainer\",\n                  target: \"loadingDomains\"\n                },\n                {\n                  actions: \"updateContainerSelection\",\n                  target: \"loadingChildCreationDescription\"\n                }\n              ],\n              CHANGE_CHILD_CREATION_DESCRIPTION: [\n                {\n                  actions: \"updateChildCreationDescription\"\n                }\n              ],\n              CHANGE_DOMAIN: [\n                {\n                  actions: \"updateDomain\",\n                  target: \"loadingRootObjectCreationDescriptions\"\n                }\n              ],\n              CREATE_CHILD: [\n                {\n                  target: \"creatingChild\"\n                }\n              ]\n            }\n          },\n          validForRoot: {\n            on: {\n              CHANGE_CONTAINER_SELECTION: [\n                {\n                  actions: \"updateContainerSelection\",\n                  cond: \"isRootContainer\",\n                  target: \"loadingDomains\"\n                },\n                {\n                  actions: \"updateContainerSelection\",\n                  target: \"loadingChildCreationDescription\"\n                }\n              ],\n              CHANGE_CHILD_CREATION_DESCRIPTION: [\n                {\n                  actions: \"updateChildCreationDescription\"\n                }\n              ],\n              CHANGE_DOMAIN: [\n                {\n                  actions: \"updateDomain\",\n                  target: \"loadingRootObjectCreationDescriptions\"\n                }\n              ],\n              CREATE_ROOT: [\n                {\n                  target: \"creatingRoot\"\n                }\n              ]\n            }\n          },\n          creatingChild: {\n            on: {\n              HANDLE_CREATE_ELEMENT_RESPONSE: [\n                {\n                  cond: \"isResponseCreateElementSuccessful\",\n                  target: \"success\",\n                  actions: \"updateNewElementId\"\n                },\n                {\n                  target: \"validForChild\"\n                }\n              ]\n            }\n          },\n          creatingRoot: {\n            on: {\n              HANDLE_CREATE_ELEMENT_RESPONSE: [\n                {\n                  cond: \"isResponseCreateElementSuccessful\",\n                  target: \"success\",\n                  actions: \"updateNewElementId\"\n                },\n                {\n                  target: \"validForRoot\"\n                }\n              ]\n            }\n          },\n          success: {\n            type: \"final\"\n          }\n        }\n      }\n    }\n  },\n  {\n    guards: {\n      isResponseCreateElementSuccessful: (_, event) => {\n        const { data } = event;\n        return data.createElementInReference.__typename === \"CreateElementInReferenceSuccessPayload\";\n      },\n      isContainmentReference: (_, event) => {\n        const { containment } = event;\n        return containment;\n      },\n      isRootContainer: (_, event) => {\n        var _a;\n        const { container } = event;\n        return ((_a = container.entries[0]) == null ? void 0 : _a.kind) === \"siriusWeb://document\";\n      }\n    },\n    actions: {\n      updateDomains: assign((_, event) => {\n        var _a;\n        const { data } = event;\n        const { domains } = data.viewer.editingContext;\n        const selectedDomainId = ((_a = domains[0]) == null ? void 0 : _a.id) || \"\";\n        return { domains, selectedDomainId };\n      }),\n      updateDomain: assign((_, event) => {\n        const { domainId } = event;\n        return { selectedDomainId: domainId };\n      }),\n      updateChildCreationDescriptions: assign((_, event) => {\n        var _a;\n        const { data } = event;\n        const { referenceWidgetChildCreationDescriptions } = data.viewer.editingContext;\n        const selectedChildCreationDescriptionId = ((_a = referenceWidgetChildCreationDescriptions[0]) == null ? void 0 : _a.id) || \"\";\n        return { creationDescriptions: referenceWidgetChildCreationDescriptions, selectedChildCreationDescriptionId };\n      }),\n      updateRootChildCreationDescriptions: assign((_, event) => {\n        var _a;\n        const { data } = event;\n        const { referenceWidgetRootCreationDescriptions } = data.viewer.editingContext;\n        const selectedChildCreationDescriptionId = ((_a = referenceWidgetRootCreationDescriptions[0]) == null ? void 0 : _a.id) || \"\";\n        return { creationDescriptions: referenceWidgetRootCreationDescriptions, selectedChildCreationDescriptionId };\n      }),\n      updateChildCreationDescription: assign((_, event) => {\n        const { childCreationDescriptionId } = event;\n        return { selectedChildCreationDescriptionId: childCreationDescriptionId };\n      }),\n      updateContainer: assign((_, event) => {\n        const { containerKind, containerId } = event;\n        return {\n          containerId,\n          containerKind\n        };\n      }),\n      updateContainerSelection: assign((_, event) => {\n        var _a, _b;\n        const { container } = event;\n        return {\n          containerSelected: container,\n          containerId: (_a = container.entries[0]) == null ? void 0 : _a.id,\n          containerKind: (_b = container.entries[0]) == null ? void 0 : _b.kind\n        };\n      }),\n      updateNewElementId: assign((_, event) => {\n        const { data } = event;\n        if (isCreateElementSuccessPayload(data.createElementInReference)) {\n          const { object } = data.createElementInReference;\n          return { newObjectId: object.id };\n        }\n        return {};\n      })\n    }\n  }\n);\nconst useStyle = makeStyles((theme) => ({\n  title: {\n    opacity: 0.6,\n    fontSize: theme.typography.caption.fontSize\n  },\n  select: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  iconRoot: {\n    minWidth: theme.spacing(3)\n  }\n}));\nconst createElementInReferenceMutation = gql`\n  mutation createElementInReference($input: CreateElementInReferenceInput!) {\n    createElementInReference(input: $input) {\n      __typename\n      ... on CreateElementInReferenceSuccessPayload {\n        object {\n          id\n          label\n          kind\n        }\n        messages {\n          body\n          level\n        }\n      }\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst getChildCreationDescriptionsQuery = gql`\n  query getChildCreationDescriptions(\n    $editingContextId: ID!\n    $kind: ID!\n    $referenceKind: String\n    $descriptionId: String!\n  ) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        referenceWidgetChildCreationDescriptions(\n          kind: $kind\n          referenceKind: $referenceKind\n          descriptionId: $descriptionId\n        ) {\n          id\n          label\n          iconURL\n        }\n      }\n    }\n  }\n`;\nconst getRootObjectCreationDescriptionsQuery = gql`\n  query getRootObjectCreationDescriptions(\n    $editingContextId: ID!\n    $domainId: ID!\n    $referenceKind: String\n    $descriptionId: String!\n  ) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        referenceWidgetRootCreationDescriptions(\n          domainId: $domainId\n          referenceKind: $referenceKind\n          descriptionId: $descriptionId\n        ) {\n          id\n          label\n          iconURL\n        }\n      }\n    }\n  }\n`;\nconst getDomainsQuery = gql`\n  query getDomains($editingContextId: ID!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        domains(rootDomainsOnly: false) {\n          id\n          label\n        }\n      }\n    }\n  }\n`;\nconst isErrorPayload$1 = (payload) => payload.__typename === \"ErrorPayload\";\nconst isSuccessPayload$1 = (payload) => payload.__typename === \"CreateElementInReferenceSuccessPayload\";\nconst CreateModal = ({ editingContextId, widget, onClose, formId }) => {\n  const classes = useStyle();\n  const { addErrorMessage, addMessages } = useMultiToast();\n  const [{ value, context }, dispatch] = useMachine(createModalMachine);\n  const { createModal } = value;\n  const {\n    domains,\n    selectedChildCreationDescriptionId,\n    creationDescriptions,\n    newObjectId,\n    containerSelected,\n    containerId,\n    containerKind,\n    selectedDomainId\n  } = context;\n  useEffect(() => {\n    const changeContainmentModeEvent = {\n      containment: widget.reference.containment,\n      containerKind: widget.reference.containment ? widget.reference.ownerKind : null,\n      containerId: widget.reference.containment ? widget.ownerId : null,\n      type: \"CHANGE_CONTAINMENT_MODE\"\n    };\n    dispatch(changeContainmentModeEvent);\n  }, []);\n  const [getDomains, { loading: domainsLoading, data: domainsData, error: domainsError }] = useLazyQuery(getDomainsQuery, {\n    variables: { editingContextId }\n  });\n  useEffect(() => {\n    if (!domainsLoading) {\n      if (domainsError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (domainsData) {\n        const fetchDomainsEvent = {\n          type: \"HANDLE_FETCHED_DOMAINS\",\n          data: domainsData\n        };\n        dispatch(fetchDomainsEvent);\n      }\n    }\n  }, [domainsLoading, domainsData, domainsError]);\n  const [\n    getRootObjectCreationDescriptions,\n    { loading: descriptionsLoading, data: descriptionsData, error: descriptionError }\n  ] = useLazyQuery(\n    getRootObjectCreationDescriptionsQuery\n  );\n  useEffect(() => {\n    if (!descriptionsLoading) {\n      if (descriptionError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (descriptionsData) {\n        const fetchDescriptionsEvent = {\n          type: \"HANDLE_FETCHED_ROOT_OBJECT_CREATION_DESCRIPTIONS\",\n          data: descriptionsData\n        };\n        dispatch(fetchDescriptionsEvent);\n      }\n    }\n  }, [descriptionsLoading, descriptionsData, descriptionError]);\n  const [\n    getChildCreationDescription,\n    {\n      loading: childCreationDescriptionsLoading,\n      data: childCreationDescriptionsData,\n      error: childCreationDescriptionsError\n    }\n  ] = useLazyQuery(\n    getChildCreationDescriptionsQuery\n  );\n  useEffect(() => {\n    if (!childCreationDescriptionsLoading) {\n      if (childCreationDescriptionsError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (childCreationDescriptionsData) {\n        const fetchChildCreationDescriptionsEvent = {\n          type: \"HANDLE_FETCHED_CHILD_CREATION_DESCRIPTIONS\",\n          data: childCreationDescriptionsData\n        };\n        dispatch(fetchChildCreationDescriptionsEvent);\n      }\n    }\n  }, [childCreationDescriptionsLoading, childCreationDescriptionsData, childCreationDescriptionsError]);\n  const [\n    createElementInReference,\n    { loading: createElementLoading, error: createElementError, data: createElementData }\n  ] = useMutation(\n    createElementInReferenceMutation\n  );\n  useEffect(() => {\n    if (!createElementLoading) {\n      if (createElementError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (createElementData) {\n        const handleResponseEvent = {\n          type: \"HANDLE_CREATE_ELEMENT_RESPONSE\",\n          data: createElementData\n        };\n        dispatch(handleResponseEvent);\n        const { createElementInReference: createElementInReference2 } = createElementData;\n        if (isErrorPayload$1(createElementInReference2) || isSuccessPayload$1(createElementInReference2)) {\n          const { messages } = createElementInReference2;\n          addMessages(messages);\n        }\n      }\n    }\n  }, [createElementLoading, createElementData, createElementError]);\n  const onCreateObject = () => {\n    let input = null;\n    if (containerId) {\n      if (createModal === \"validForChild\") {\n        dispatch({ type: \"CREATE_CHILD\" });\n        input = {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id,\n          containerId,\n          domainId: null,\n          creationDescriptionId: selectedChildCreationDescriptionId,\n          descriptionId: widget.descriptionId\n        };\n      } else if (createModal === \"validForRoot\") {\n        dispatch({ type: \"CREATE_ROOT\" });\n        input = {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id,\n          containerId,\n          domainId: selectedDomainId,\n          creationDescriptionId: selectedChildCreationDescriptionId,\n          descriptionId: widget.descriptionId\n        };\n      }\n    }\n    if (input) {\n      createElementInReference({ variables: { input } });\n    }\n  };\n  const onDomainChange = (event) => {\n    const { value: value2 } = event.target;\n    const changeDomainEvent = { type: \"CHANGE_DOMAIN\", domainId: value2 };\n    dispatch(changeDomainEvent);\n  };\n  const onChildCreationDescriptionChange = (event) => {\n    const value2 = event.target.value;\n    const changeChildCreationDescriptionEvent = {\n      type: \"CHANGE_CHILD_CREATION_DESCRIPTION\",\n      childCreationDescriptionId: value2\n    };\n    dispatch(changeChildCreationDescriptionEvent);\n  };\n  useEffect(() => {\n    if (createModal === \"loadingChildCreationDescription\" && containerKind) {\n      getChildCreationDescription({\n        variables: {\n          editingContextId,\n          kind: containerKind,\n          referenceKind: widget.reference.referenceKind,\n          descriptionId: widget.descriptionId\n        }\n      });\n    }\n    if (createModal === \"loadingDomains\") {\n      getDomains({ variables: { editingContextId } });\n    }\n    if (createModal === \"loadingRootObjectCreationDescriptions\" && selectedDomainId) {\n      getRootObjectCreationDescriptions({\n        variables: {\n          editingContextId,\n          domainId: selectedDomainId,\n          referenceKind: widget.reference.referenceKind,\n          descriptionId: widget.descriptionId\n        }\n      });\n    }\n    if (createModal === \"success\") {\n      onClose(newObjectId);\n    }\n  }, [createModal]);\n  const onBrowserSelection = (selection) => {\n    const changeContainerSelectionEvent = {\n      type: \"CHANGE_CONTAINER_SELECTION\",\n      container: selection\n    };\n    dispatch(changeContainerSelectionEvent);\n  };\n  return /* @__PURE__ */ jsx(\n    SelectionContext.Provider,\n    {\n      value: {\n        selection: containerSelected,\n        setSelection: onBrowserSelection\n      },\n      children: /* @__PURE__ */ jsxs(\n        Dialog,\n        {\n          open: true,\n          onClose: () => onClose(null),\n          \"aria-labelledby\": \"dialog-title\",\n          fullWidth: true,\n          \"data-testid\": \"create-modal\",\n          children: [\n            /* @__PURE__ */ jsx(DialogTitle, { id: \"dialog-title\", children: \"Create an object\" }),\n            /* @__PURE__ */ jsxs(DialogContent, { children: [\n              widget.reference.containment ? null : /* @__PURE__ */ jsx(\n                ModelBrowserTreeView,\n                {\n                  editingContextId,\n                  widget,\n                  markedItemIds: [],\n                  enableMultiSelection: false,\n                  title: \"Select the container\",\n                  leafType: \"container\",\n                  ownerKind: widget.reference.referenceKind\n                }\n              ),\n              containerKind === \"siriusWeb://document\" && /* @__PURE__ */ jsxs(Fragment, { children: [\n                /* @__PURE__ */ jsx(\"span\", { className: classes.title, children: \"Select the domain\" }),\n                /* @__PURE__ */ jsx(\n                  Select,\n                  {\n                    value: selectedDomainId,\n                    onChange: onDomainChange,\n                    disabled: createModal === \"loadingDomains\" || createModal === \"creatingChild\",\n                    labelId: \"createModalChildCreationDescriptionLabel\",\n                    fullWidth: true,\n                    \"data-testid\": \"domain\",\n                    children: domains.map((domain) => /* @__PURE__ */ jsx(MenuItem, { value: domain.id, children: domain.label }, domain.id))\n                  }\n                )\n              ] }),\n              /* @__PURE__ */ jsx(\"span\", { className: classes.title, children: \"Select the object type\" }),\n              /* @__PURE__ */ jsx(\n                Select,\n                {\n                  classes: { select: classes.select },\n                  value: selectedChildCreationDescriptionId,\n                  onChange: onChildCreationDescriptionChange,\n                  disabled: createModal !== \"validForChild\" && createModal !== \"validForRoot\",\n                  labelId: \"createModalChildCreationDescriptionLabel\",\n                  fullWidth: true,\n                  \"data-testid\": \"childCreationDescription\",\n                  children: creationDescriptions.map((creationDescription) => /* @__PURE__ */ jsxs(MenuItem, { value: creationDescription.id, children: [\n                    creationDescription.iconURL.length > 0 && /* @__PURE__ */ jsx(ListItemIcon, { className: classes.iconRoot, children: /* @__PURE__ */ jsx(IconOverlay, { iconURL: creationDescription.iconURL, alt: creationDescription.label }) }),\n                    /* @__PURE__ */ jsx(ListItemText, { primary: creationDescription.label })\n                  ] }, creationDescription.id))\n                }\n              )\n            ] }),\n            /* @__PURE__ */ jsx(DialogActions, { children: /* @__PURE__ */ jsx(\n              Button,\n              {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"button\",\n                \"data-testid\": \"create-object\",\n                onClick: onCreateObject,\n                disabled: createModal !== \"validForChild\" && createModal !== \"validForRoot\",\n                children: \"Create\"\n              }\n            ) })\n          ]\n        }\n      )\n    }\n  );\n};\nconst useStyles$2 = makeStyles((theme) => ({\n  selectable: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  selected: {\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.action.selected\n  },\n  selectedLabel: {\n    fontWeight: \"bold\"\n  },\n  title: {\n    opacity: 0.6,\n    fontSize: theme.typography.caption.fontSize\n  },\n  borderStyle: {\n    border: \"1px solid\",\n    borderColor: theme.palette.grey[500],\n    height: 300,\n    overflow: \"auto\"\n  },\n  dragIcon: {\n    display: \"block\"\n  },\n  noDragIcon: {\n    display: \"none\"\n  }\n}));\nconst useLabelStyles = makeStyles((theme) => ({\n  highlight: {\n    backgroundColor: theme.palette.navigation.leftBackground\n  }\n}));\nconst HighlightedLabel = ({ label, textToHighlight }) => {\n  var _a;\n  const classes = useLabelStyles();\n  let itemLabel;\n  const splitLabelWithTextToHighlight = splitText(label, textToHighlight);\n  if (textToHighlight === null || textToHighlight === \"\" || splitLabelWithTextToHighlight.length === 1 && ((_a = splitLabelWithTextToHighlight[0]) == null ? void 0 : _a.toLocaleLowerCase()) !== label.toLocaleLowerCase()) {\n    itemLabel = /* @__PURE__ */ jsx(Fragment, { children: label });\n  } else {\n    const languages = Array.from(navigator.languages);\n    itemLabel = /* @__PURE__ */ jsx(Fragment, { children: splitLabelWithTextToHighlight.map((value, index) => {\n      const shouldHighlight = value.localeCompare(textToHighlight, languages, { sensitivity: \"base\" }) === 0;\n      return /* @__PURE__ */ jsx(\n        \"span\",\n        {\n          \"data-testid\": `${label}-${value}-${index}`,\n          className: shouldHighlight ? classes.highlight : \"\",\n          children: value\n        },\n        value + index\n      );\n    }) });\n  }\n  return /* @__PURE__ */ jsx(Typography, { children: itemLabel });\n};\nconst FilterableSortableList = ({\n  items,\n  options,\n  setItems,\n  handleDragItemStart,\n  handleDragItemEnd,\n  handleDropNewItem,\n  onClick,\n  selectedItems,\n  moveElement\n}) => {\n  const classes = useStyles$2();\n  const [state, setState] = useState({\n    filterBarText: \"\",\n    hoveringItemId: void 0,\n    draggingItemId: void 0,\n    draggingStartIndex: -1,\n    draggingIndex: -1\n  });\n  const handleMouseEnter = (id) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        hoveringItemId: id\n      };\n    });\n  };\n  const handleMouseLeave = () => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        hoveringItemId: void 0\n      };\n    });\n  };\n  const handleDragOverNewItem = (event) => {\n    event.preventDefault();\n  };\n  const handleDragStartOrder = (id, index) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        draggingItemId: id,\n        draggingStartIndex: index\n      };\n    });\n  };\n  const handleDragEndOrder = () => {\n    if (state.draggingItemId) {\n      moveElement(state.draggingItemId, state.draggingStartIndex, state.draggingIndex);\n    }\n    setState((prevState) => {\n      return {\n        ...prevState,\n        draggingItemId: void 0\n      };\n    });\n  };\n  const handleDragOverOrder = (event, index) => {\n    event.preventDefault();\n    if (state.draggingItemId) {\n      const newList = Array.from(items);\n      const draggedItem = newList.find((item) => item.id === state.draggingItemId);\n      if (draggedItem) {\n        const draggedItemIndex = newList.indexOf(draggedItem);\n        newList.splice(draggedItemIndex, 1);\n        newList.splice(index, 0, draggedItem);\n        setItems(newList);\n        setState((prevState) => {\n          return {\n            ...prevState,\n            draggingIndex: index\n          };\n        });\n      }\n    }\n  };\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(\n      ModelBrowserFilterBar,\n      {\n        onTextChange: (event) => setState((prevState) => {\n          return {\n            ...prevState,\n            filterBarText: event.target.value\n          };\n        }),\n        onTextClear: () => setState((prevState) => {\n          return {\n            ...prevState,\n            filterBarText: \"\"\n          };\n        }),\n        text: state.filterBarText\n      }\n    ),\n    /* @__PURE__ */ jsx(\"span\", { className: classes.title, children: \"Selected\" }),\n    /* @__PURE__ */ jsx(\"div\", { className: classes.borderStyle, onDrop: handleDropNewItem, onDragOver: handleDragOverNewItem, children: /* @__PURE__ */ jsx(List, { dense: true, component: \"div\", role: \"list\", \"data-testid\": \"selected-items-list\", children: items.filter(({ label }) => {\n      var _a;\n      if (state.filterBarText === null || state.filterBarText === \"\") {\n        return true;\n      }\n      const splitLabelWithTextToHighlight = splitText(label, state.filterBarText);\n      return splitLabelWithTextToHighlight.length > 1 || splitLabelWithTextToHighlight.length === 1 && ((_a = splitLabelWithTextToHighlight[0]) == null ? void 0 : _a.toLocaleLowerCase()) === state.filterBarText.toLocaleLowerCase();\n    }).map(({ id, kind, label }, index) => {\n      var _a;\n      const iconURL = ((_a = options.find((option) => option.id === id)) == null ? void 0 : _a.iconURL) ?? [];\n      const labelId = `transfer-list-item-${id}-label`;\n      const selected = selectedItems.some((entry) => entry.id === id);\n      const hover = state.hoveringItemId === id;\n      return /* @__PURE__ */ jsxs(\n        ListItem,\n        {\n          role: \"listitem\",\n          className: selected ? classes.selected : classes.selectable,\n          onDragOver: (event) => handleDragOverOrder(event, index),\n          onDragEnd: handleDragItemEnd,\n          onClick: (event) => onClick(event, { id, kind, label }),\n          onMouseEnter: () => handleMouseEnter(id),\n          onMouseLeave: handleMouseLeave,\n          \"data-testid\": label,\n          children: [\n            /* @__PURE__ */ jsx(\n              ListItemIcon,\n              {\n                className: hover ? classes.dragIcon : classes.noDragIcon,\n                draggable: true,\n                onDragStart: () => handleDragStartOrder(id, index),\n                onDragEnd: handleDragEndOrder,\n                children: /* @__PURE__ */ jsx(DragHandleIcon, {})\n              }\n            ),\n            /* @__PURE__ */ jsx(ListItemIcon, { draggable: true, onDragStart: () => handleDragItemStart(id), children: /* @__PURE__ */ jsx(IconOverlay, { iconURL, alt: kind }) }),\n            /* @__PURE__ */ jsx(\n              ListItemText,\n              {\n                id: labelId,\n                draggable: true,\n                onDragStart: () => handleDragItemStart(id),\n                primary: /* @__PURE__ */ jsx(HighlightedLabel, { label, textToHighlight: state.filterBarText }),\n                classes: { primary: selected ? classes.selectedLabel : \"\" }\n              }\n            )\n          ]\n        },\n        id\n      );\n    }) }) })\n  ] });\n};\nconst useStyles$1 = makeStyles((theme) => ({\n  dialogContent: {\n    overflowX: \"hidden\"\n  },\n  root: {\n    margin: \"auto\"\n  },\n  paper: {\n    width: 400,\n    height: 370,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\nconst getReferenceValueOptionsQuery = gql`\n  query getReferenceValueOptions($editingContextId: ID!, $representationId: ID!, $referenceWidgetId: ID!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        representation(representationId: $representationId) {\n          description {\n            ... on FormDescription {\n              referenceValueOptions(referenceWidgetId: $referenceWidgetId) {\n                id\n                label\n                kind\n                iconURL\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst isFormDescription = (representationDescription) => representationDescription.__typename === \"FormDescription\";\nconst TransferModal = ({\n  editingContextId,\n  formId,\n  widget,\n  onClose,\n  addElements,\n  removeElement,\n  moveElement\n}) => {\n  const classes = useStyles$1();\n  const { addErrorMessage } = useMultiToast();\n  const [state, setState] = useState({\n    right: widget.referenceValues,\n    rightSelection: [],\n    draggingRightItemId: void 0,\n    leftSelection: [],\n    options: []\n  });\n  const {\n    loading: childReferenceValueOptionsLoading,\n    data: childReferenceValueOptionsData,\n    error: childReferenceValueOptionsError\n  } = useQuery(\n    getReferenceValueOptionsQuery,\n    {\n      variables: {\n        editingContextId,\n        representationId: formId,\n        referenceWidgetId: widget.id\n      }\n    }\n  );\n  useEffect(() => {\n    if (!childReferenceValueOptionsLoading) {\n      if (childReferenceValueOptionsError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (childReferenceValueOptionsData) {\n        const representationDescription = childReferenceValueOptionsData.viewer.editingContext.representation.description;\n        if (isFormDescription(representationDescription)) {\n          setState((prevState) => {\n            return {\n              ...prevState,\n              options: representationDescription.referenceValueOptions\n            };\n          });\n        }\n      }\n    }\n  }, [childReferenceValueOptionsLoading, childReferenceValueOptionsData, childReferenceValueOptionsError]);\n  useEffect(() => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        rightSelection: prevState.rightSelection.filter(\n          (sel) => widget.referenceValues.map((ref) => ref.id).includes(sel.id)\n        ),\n        right: widget.referenceValues\n      };\n    });\n  }, [widget.referenceValues]);\n  const handleLeftSelection = (selection) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        rightSelection: [],\n        leftSelection: selection.entries\n      };\n    });\n  };\n  const handleDragOverLeft = (event) => {\n    event.preventDefault();\n  };\n  const handleDropLeft = (event) => {\n    event.preventDefault();\n    if (state.draggingRightItemId) {\n      removeElement(state.draggingRightItemId);\n    }\n  };\n  const handleDragStart = (id) => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        draggingRightItemId: id\n      };\n    });\n  };\n  const handleDragEnd = () => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        draggingRightItemId: void 0\n      };\n    });\n  };\n  const handleDropRight = (event) => {\n    event.preventDefault();\n    const dragSourcesStringified = event.dataTransfer.getData(DRAG_SOURCES_TYPE);\n    if (dragSourcesStringified) {\n      const sources = JSON.parse(dragSourcesStringified);\n      if (Array.isArray(sources) && sources.length > 0) {\n        const entriesDragged = sources;\n        const newElementIds = entriesDragged.filter((newEntry) => !state.right.some((existingEntry) => existingEntry.id === newEntry.id)).map((element) => element.id);\n        addElements(newElementIds);\n      }\n    }\n  };\n  const onClick = (event, item) => {\n    if (event.ctrlKey || event.metaKey) {\n      event.stopPropagation();\n      const isItemInSelection = state.rightSelection.find((entry) => entry.id === item.id);\n      const newSelection = isItemInSelection ? state.rightSelection.filter((entry) => entry.id !== item.id) : [...state.rightSelection, item];\n      setState((prevState) => {\n        return {\n          ...prevState,\n          rightSelection: newSelection,\n          leftSelection: newSelection\n        };\n      });\n    } else {\n      setState((prevState) => {\n        return {\n          ...prevState,\n          rightSelection: [item],\n          leftSelection: [item]\n        };\n      });\n    }\n  };\n  const handleDispatchRight = () => {\n    addElements(state.leftSelection.map((element) => element.id));\n  };\n  const handleDispatchLeft = () => {\n    state.rightSelection.forEach((element) => removeElement(element.id));\n  };\n  return /* @__PURE__ */ jsx(\n    SelectionContext.Provider,\n    {\n      value: {\n        selection: { entries: state.leftSelection },\n        setSelection: handleLeftSelection\n      },\n      children: /* @__PURE__ */ jsxs(\n        Dialog,\n        {\n          open: true,\n          onClose: () => onClose(),\n          \"aria-labelledby\": \"dialog-title\",\n          maxWidth: false,\n          \"data-testid\": \"transfer-modal\",\n          children: [\n            /* @__PURE__ */ jsx(DialogTitle, { id: \"dialog-title\", children: \"Edit reference\" }),\n            /* @__PURE__ */ jsx(DialogContent, { className: classes.dialogContent, children: /* @__PURE__ */ jsxs(Grid, { container: true, spacing: 2, justifyContent: \"center\", alignItems: \"center\", className: classes.root, children: [\n              /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsx(\"div\", { className: classes.paper, onDragOver: handleDragOverLeft, onDrop: handleDropLeft, children: /* @__PURE__ */ jsx(\n                ModelBrowserTreeView,\n                {\n                  editingContextId,\n                  widget,\n                  markedItemIds: state.right.map((entry) => entry.id),\n                  enableMultiSelection: widget.reference.manyValued,\n                  title: \"Choices\",\n                  leafType: \"reference\",\n                  ownerKind: widget.reference.ownerKind\n                }\n              ) }) }),\n              /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsxs(Grid, { container: true, direction: \"column\", alignItems: \"center\", children: [\n                /* @__PURE__ */ jsx(\n                  IconButton,\n                  {\n                    className: classes.button,\n                    onClick: handleDispatchRight,\n                    disabled: !state.leftSelection.some(\n                      (leftEntry) => !state.right.some((rightEntry) => rightEntry.id === leftEntry.id)\n                    ),\n                    \"aria-label\": \"move selected right\",\n                    \"data-testid\": \"move-right\",\n                    children: /* @__PURE__ */ jsx(ChevronRightIcon, {})\n                  }\n                ),\n                /* @__PURE__ */ jsx(\n                  IconButton,\n                  {\n                    className: classes.button,\n                    onClick: handleDispatchLeft,\n                    disabled: state.rightSelection.length === 0,\n                    \"aria-label\": \"move selected left\",\n                    \"data-testid\": \"move-left\",\n                    children: /* @__PURE__ */ jsx(ChevronLeftIcon, {})\n                  }\n                )\n              ] }) }),\n              /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsx(\"div\", { className: classes.paper, children: /* @__PURE__ */ jsx(\n                FilterableSortableList,\n                {\n                  items: state.right,\n                  options: [...state.options, ...widget.referenceValues],\n                  setItems: (items) => setState((prevState) => {\n                    return {\n                      ...prevState,\n                      right: items\n                    };\n                  }),\n                  handleDragItemStart: handleDragStart,\n                  handleDragItemEnd: handleDragEnd,\n                  handleDropNewItem: handleDropRight,\n                  onClick,\n                  selectedItems: state.rightSelection,\n                  moveElement\n                }\n              ) }) })\n            ] }) }),\n            /* @__PURE__ */ jsx(DialogActions, { children: /* @__PURE__ */ jsx(\n              Button,\n              {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"button\",\n                \"data-testid\": \"close-transfer-modal\",\n                onClick: () => onClose(),\n                children: \"close\"\n              }\n            ) })\n          ]\n        }\n      )\n    }\n  );\n};\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflow: \"hidden\"\n  }\n}));\nconst clearReferenceMutation = gql`\n  mutation clearReference($input: ClearReferenceInput!) {\n    clearReference(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n      ... on SuccessPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst removeReferenceValueMutation = gql`\n  mutation removeReferenceValue($input: RemoveReferenceValueInput!) {\n    removeReferenceValue(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n      ... on SuccessPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst setReferenceValueMutation = gql`\n  mutation setReferenceValue($input: SetReferenceValueInput!) {\n    setReferenceValue(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n      ... on SuccessPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst addReferenceValuesMutation = gql`\n  mutation addReferenceValues($input: AddReferenceValuesInput!) {\n    addReferenceValues(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n      ... on SuccessPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst moveReferenceValueMutation = gql`\n  mutation moveReferenceValue($input: MoveReferenceValueInput!) {\n    moveReferenceValue(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        messages {\n          body\n          level\n        }\n      }\n      ... on SuccessPayload {\n        messages {\n          body\n          level\n        }\n      }\n    }\n  }\n`;\nconst isErrorPayload = (payload) => payload.__typename === \"ErrorPayload\";\nconst isSuccessPayload = (payload) => payload.__typename === \"SuccessPayload\";\nconst ReferencePropertySection = ({\n  editingContextId,\n  formId,\n  widget,\n  subscribers,\n  readOnly\n}) => {\n  const classes = useStyles();\n  const { setSelection } = useSelection();\n  const { showDeletionConfirmation } = useDeletionConfirmationDialog();\n  const [clearReference, { loading: clearLoading, error: clearError, data: clearData }] = useMutation(clearReferenceMutation);\n  const [removeReferenceValue, { loading: removeLoading, error: removeError, data: removeData }] = useMutation(removeReferenceValueMutation);\n  const [setReferenceValue, { loading: setLoading, error: setError, data: setData }] = useMutation(setReferenceValueMutation);\n  const [addReferenceValues, { loading: addLoading, error: addError, data: addData }] = useMutation(addReferenceValuesMutation);\n  const [moveReferenceValue, { loading: moveLoading, error: moveError, data: moveData }] = useMutation(moveReferenceValueMutation);\n  const onReferenceValueSimpleClick = (item) => {\n    const { id, label, kind } = item;\n    setSelection({ entries: [{ id, label, kind }] });\n  };\n  const onReferenceValueDoubleClick = (item) => {\n    const { id, label, kind } = item;\n    setSelection({ entries: [{ id, label, kind }] });\n  };\n  const clickHandler = useClickHandler(onReferenceValueSimpleClick, onReferenceValueDoubleClick);\n  const { addErrorMessage, addMessages } = useMultiToast();\n  useEffect(() => {\n    if (!clearLoading) {\n      if (clearError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (clearData) {\n        const { clearReference: clearReference2 } = clearData;\n        if (isErrorPayload(clearReference2) || isSuccessPayload(clearReference2)) {\n          addMessages(clearReference2.messages);\n        }\n      }\n    }\n  }, [clearLoading, clearError, clearData]);\n  useEffect(() => {\n    if (!removeLoading) {\n      if (removeError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (removeData) {\n        const { removeReferenceValue: removeReferenceValue2 } = removeData;\n        if (isErrorPayload(removeReferenceValue2) || isSuccessPayload(removeReferenceValue2)) {\n          addMessages(removeReferenceValue2.messages);\n        }\n      }\n    }\n  }, [removeLoading, removeError, removeData]);\n  useEffect(() => {\n    if (!setLoading) {\n      if (setError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (setData) {\n        const { setReferenceValue: setReferenceValue2 } = setData;\n        if (isErrorPayload(setReferenceValue2) || isSuccessPayload(setReferenceValue2)) {\n          addMessages(setReferenceValue2.messages);\n        }\n      }\n    }\n  }, [setLoading, setError, setData]);\n  useEffect(() => {\n    if (!addLoading) {\n      if (addError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (addData) {\n        const { addReferenceValues: addReferenceValues2 } = addData;\n        if (isErrorPayload(addReferenceValues2) || isSuccessPayload(addReferenceValues2)) {\n          addMessages(addReferenceValues2.messages);\n        }\n      }\n    }\n  }, [addLoading, addError, addData]);\n  useEffect(() => {\n    if (!moveLoading) {\n      if (moveError) {\n        addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n      }\n      if (moveData) {\n        const { moveReferenceValue: moveReferenceValue2 } = moveData;\n        if (isErrorPayload(moveReferenceValue2) || isSuccessPayload(moveReferenceValue2)) {\n          addMessages(moveReferenceValue2.messages);\n        }\n      }\n    }\n  }, [moveLoading, moveError, moveData]);\n  const callClearReference = () => {\n    const variables = {\n      input: {\n        id: crypto.randomUUID(),\n        editingContextId,\n        representationId: formId,\n        referenceWidgetId: widget.id\n      }\n    };\n    if (widget.reference.containment) {\n      showDeletionConfirmation(() => {\n        clearReference({ variables });\n      });\n    } else {\n      clearReference({ variables });\n    }\n  };\n  const callSetReferenceValue = (newValueId) => {\n    if (newValueId) {\n      const variables = {\n        input: {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id,\n          newValueId\n        }\n      };\n      setReferenceValue({ variables });\n    }\n  };\n  const callAddReferenceValues = (newValueIds) => {\n    if (newValueIds) {\n      const variables = {\n        input: {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id,\n          newValueIds\n        }\n      };\n      addReferenceValues({ variables });\n    }\n  };\n  const callRemoveReferenceValue = (valueId) => {\n    if (valueId) {\n      const variables = {\n        input: {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: formId,\n          referenceWidgetId: widget.id,\n          referenceValueId: valueId\n        }\n      };\n      if (widget.reference.containment) {\n        showDeletionConfirmation(() => {\n          removeReferenceValue({ variables });\n        });\n      } else {\n        removeReferenceValue({ variables });\n      }\n    }\n  };\n  const callMoveReferenceValue = (valueId, fromIndex, toIndex) => {\n    if (valueId && fromIndex !== -1 && toIndex !== -1) {\n      if (valueId) {\n        const variables = {\n          input: {\n            id: crypto.randomUUID(),\n            editingContextId,\n            representationId: formId,\n            referenceWidgetId: widget.id,\n            referenceValueId: valueId,\n            fromIndex,\n            toIndex\n          }\n        };\n        moveReferenceValue({ variables });\n      }\n    }\n  };\n  const handleDragEnter = (event) => {\n    event.preventDefault();\n  };\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n  const handleDrop = (event) => {\n    event.preventDefault();\n    if (readOnly || widget.readOnly) {\n      addErrorMessage(\"This widget is currently read-only\");\n    } else {\n      const dragSourcesStringified = event.dataTransfer.getData(DRAG_SOURCES_TYPE);\n      if (dragSourcesStringified) {\n        const sources = JSON.parse(dragSourcesStringified);\n        if (Array.isArray(sources) && sources.length > 0) {\n          const entries = sources;\n          const semanticElementIds = entries.filter((entry) => entry.kind.startsWith(\"siriusComponents://semantic?\")).map((entry) => entry.id);\n          if (widget.reference.manyValued) {\n            callAddReferenceValues([...semanticElementIds]);\n          } else {\n            if (semanticElementIds.length > 1) {\n              addErrorMessage(\"Single-valued reference can only accept a single value\");\n            } else {\n              callSetReferenceValue(semanticElementIds[0] ?? null);\n            }\n          }\n        }\n      }\n    }\n  };\n  const [modalDisplayed, setModalDisplayed] = useState(null);\n  const onBrowse = () => {\n    setModalDisplayed(\"browse\");\n  };\n  const onCreate = () => {\n    setModalDisplayed(\"create\");\n  };\n  const setSelectedElement = (selectedElementId) => {\n    setModalDisplayed(null);\n    if (selectedElementId && selectedElementId.length > 0) {\n      callSetReferenceValue(selectedElementId);\n    }\n  };\n  const addNewElement = (selectedElementId) => {\n    setModalDisplayed(null);\n    if (selectedElementId) {\n      if (widget.reference.manyValued) {\n        callAddReferenceValues([selectedElementId]);\n      } else {\n        callSetReferenceValue(selectedElementId);\n      }\n    }\n  };\n  let modal = null;\n  if (modalDisplayed === \"browse\") {\n    modal = widget.reference.manyValued ? /* @__PURE__ */ jsx(\n      TransferModal,\n      {\n        editingContextId,\n        formId,\n        onClose: () => setModalDisplayed(null),\n        addElements: callAddReferenceValues,\n        removeElement: callRemoveReferenceValue,\n        moveElement: callMoveReferenceValue,\n        widget\n      }\n    ) : /* @__PURE__ */ jsx(BrowseModal, { editingContextId, onClose: setSelectedElement, widget });\n  } else if (modalDisplayed === \"create\") {\n    modal = /* @__PURE__ */ jsx(CreateModal, { editingContextId, onClose: addNewElement, widget, formId });\n  }\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: classes.root, children: [\n      /* @__PURE__ */ jsx(\n        PropertySectionLabel,\n        {\n          editingContextId,\n          formId,\n          widget,\n          subscribers,\n          \"data-testid\": widget.label + \"_\" + widget.reference.referenceKind\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        ValuedReferenceAutocomplete,\n        {\n          editingContextId,\n          formId,\n          widget,\n          readOnly,\n          onDragEnter: handleDragEnter,\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          onMoreClick: onBrowse,\n          onCreateClick: onCreate,\n          optionClickHandler: clickHandler,\n          clearReference: callClearReference,\n          removeReferenceValue: callRemoveReferenceValue,\n          addReferenceValues: callAddReferenceValues,\n          setReferenceValue: callSetReferenceValue\n        }\n      )\n    ] }),\n    modal\n  ] });\n};\nexport {\n  ReferenceIcon,\n  ReferencePreview,\n  ReferencePropertySection,\n  addReferenceValuesMutation,\n  clearReferenceMutation,\n  moveReferenceValueMutation,\n  removeReferenceValueMutation,\n  setReferenceValueMutation\n};\n"],
  "mappings": "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",
  "names": ["HelpOutlineOutlined", "MoreHorizIcon", "AddIcon", "DeleteIcon", "SearchIcon", "ClearIcon", "DragHandleIcon", "ChevronRightIcon", "ChevronLeftIcon"]
}
