{
  "version": 3,
  "sources": ["../../../../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,YAAuB;AACvB,wBAAsB;AAEtB;AACA;AAEA;AACA,IAAI,aAAgC,iBAAW,SAASA,YAAW,OAAO,KAAK;AAC7E,MAAI,UAAU,MAAM,SAChB,WAAW,MAAM,UACjB,WAAW,MAAM,MACjB,YAAY,MAAM,OAClB,WAAW,MAAM,UACjB,QAAQ,yBAAyB,OAAO,CAAC,WAAW,YAAY,QAAQ,SAAS,UAAU,CAAC;AAEhG,MAAI,UAAgB,aAAO,IAAI;AAE/B,MAAI,iBAAiB,cAAc;AAAA,IACjC,YAAY;AAAA,IACZ,SAAS,MAAM;AAAA,IACf,MAAM;AAAA,EACR,CAAC,GACG,kBAAkB,eAAe,gBAAgB,CAAC,GAClD,QAAQ,gBAAgB,CAAC,GACzB,WAAW,gBAAgB,CAAC;AAEhC,EAAM,0BAAoB,SAAS,WAAY;AAC7C,WAAO;AAAA,MACL,OAAO,SAAS,QAAQ;AACtB,YAAI,QAAQ,QAAQ,QAAQ,cAAc,8BAA8B;AAExE,YAAI,CAAC,OAAO;AACV,kBAAQ,QAAQ,QAAQ,cAAc,sBAAsB;AAAA,QAC9D;AAEA,YAAI,OAAO;AACT,gBAAM,MAAM;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AACL,MAAI,YAAY,WAAW,KAAK,OAAO;AAEvC,MAAI,eAAe,SAASC,cAAa,OAAO;AAC9C,aAAS,MAAM,OAAO,KAAK;AAE3B,QAAI,UAAU;AACZ,eAAS,OAAO,MAAM,OAAO,KAAK;AAAA,IACpC;AAAA,EACF;AAEA,MAAI,OAAO,MAAM,QAAQ;AACzB,SAA0B,oBAAc,0BAAkB,UAAU;AAAA,IAClE,OAAO;AAAA,MACL;AAAA,MACA,UAAU;AAAA,MACV;AAAA,IACF;AAAA,EACF,GAAsB,oBAAc,mBAAW,SAAS;AAAA,IACtD,MAAM;AAAA,IACN,KAAK;AAAA,EACP,GAAG,KAAK,GAAG,QAAQ,CAAC;AACtB,CAAC;AACD,OAAwC,WAAW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS7D,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA,EAKpB,cAAc,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,GAAG,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3G,MAAM,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhB,UAAU,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAKpB,OAAO,kBAAAA,QAAU;AACnB,IAAI;AACJ,IAAO,qBAAQ;",
  "names": ["RadioGroup", "handleChange", "PropTypes"]
}
