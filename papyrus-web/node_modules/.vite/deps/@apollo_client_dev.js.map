{
  "version": 3,
  "sources": ["../../../../node_modules/@apollo/client/invariantErrorCodes.js", "../../../../node_modules/@apollo/src/dev/loadErrorMessageHandler.ts", "../../../../node_modules/@apollo/src/dev/loadDevMessages.ts", "../../../../node_modules/@apollo/src/dev/loadErrorMessages.ts"],
  "sourcesContent": ["export const errorCodes = // This file is used by the error message display website and the\n// @apollo/client/includeErrors entry point.\n// This file is not meant to be imported manually.\n{\n  1: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n    condition: \"typeof dataId === \\\"string\\\"\",\n    message: \"store.merge expects a string ID\"\n  },\n\n  2: {\n    file: \"@apollo/client/cache/inmemory/key-extractor.js\",\n    condition: \"extracted !== void 0\",\n    message: \"Missing field '%s' while extracting keyFields from %s\"\n  },\n\n  3: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    condition: \"!old || old === which\",\n    message: \"Cannot change root %s __typename more than once\"\n  },\n\n  6: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: \"Cannot automatically merge arrays\"\n  },\n\n  7: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    message: \"No fragment named %s\"\n  },\n\n  8: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    condition: \"!isReference(value)\",\n    message: \"Missing selection set for object of type %s returned for query field %s\"\n  },\n\n  9: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: \"Could not identify object %s\"\n  },\n\n  11: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: \"No fragment named %s\"\n  },\n\n  13: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n\n    message: \"To initialize Apollo Client, you must specify a 'cache' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n  },\n\n  14: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.fetchPolicy !== 'cache-and-network'\",\n\n    message: 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n        'client.query can only return a single result. Please use client.watchQuery ' +\n        'to receive multiple results from the cache and the network, or consider ' +\n        'using a different fetchPolicy, such as cache-first or network-only.'\n  },\n\n  16: {\n    file: \"@apollo/client/core/LocalState.js\",\n    condition: \"fragment\",\n    message: \"No fragment named %s\"\n  },\n\n  17: {\n    file: \"@apollo/client/core/LocalState.js\",\n    condition: \"fragment\",\n    message: \"No fragment named %s\"\n  },\n\n  20: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    condition: \"pollInterval\",\n    message: 'Attempted to start a polling query without a polling interval.'\n  },\n\n  23: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: 'QueryManager stopped while query was in flight'\n  },\n\n  24: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"mutation\",\n    message: 'mutation option is required. You must specify your GraphQL document in the mutation option.'\n  },\n\n  25: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"fetchPolicy === 'network-only' ||\\n    fetchPolicy === 'no-cache'\",\n    message: \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n  },\n\n  26: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"options.query\",\n\n    message: 'query option is required. You must specify your GraphQL document ' +\n        'in the query option.'\n  },\n\n  27: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"options.query.kind === 'Document'\",\n    message: 'You must wrap the query string in a \"gql\" tag.'\n  },\n\n  28: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!options.returnPartialData\",\n    message: 'returnPartialData option only supported on watchQuery.'\n  },\n\n  29: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!options.pollInterval\",\n    message: 'pollInterval option only supported on watchQuery.'\n  },\n\n  30: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: 'Store reset while query was in flight (not completed in link chain)'\n  },\n\n  34: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: 'request is not implemented'\n  },\n\n  35: {\n    file: \"@apollo/client/link/http/checkFetcher.js\",\n    message: \"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \"\n  },\n\n  37: {\n    file: \"@apollo/client/link/http/serializeFetchParameter.js\",\n    message: \"Network request failed. %s is not serializable: %s\"\n  },\n\n  38: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"options && (typeof options.sha256 === 'function' ||\\n    typeof options.generateHash === 'function')\",\n\n    message: 'Missing/invalid \"sha256\" or \"generateHash\" function. Please ' +\n        'configure one using the \"createPersistedQueryLink(options)\" options ' +\n        'parameter.'\n  },\n\n  39: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"forward\",\n    message: 'PersistedQueryLink cannot be the last link in the chain.'\n  },\n\n  41: {\n    file: \"@apollo/client/link/utils/validateOperation.js\",\n    message: \"illegal argument: %s\"\n  },\n\n  42: {\n    file: \"@apollo/client/react/context/ApolloConsumer.js\",\n    condition: \"context && context.client\",\n\n    message: 'Could not find \"client\" in the context of ApolloConsumer. ' +\n        \"Wrap the root component in an <ApolloProvider>.\"\n  },\n\n  43: {\n    file: \"@apollo/client/react/context/ApolloContext.js\",\n    condition: \"\\\"createContext\\\" in React\",\n\n    message: \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" +\n        \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" +\n        'Please make sure to add \"use client\" at the top of your file.\\n' +\n        \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n  },\n\n  44: {\n    file: \"@apollo/client/react/context/ApolloProvider.js\",\n    condition: \"context.client\",\n\n    message: \"ApolloProvider was not passed a client instance. Make \" +\n        'sure you pass in your client via the \"client\" prop.'\n  },\n\n  45: {\n    file: \"@apollo/client/react/hoc/hoc-utils.js\",\n    condition: \"this.withRef\",\n\n    message: \"To access the wrapped instance, you need to specify \" +\n        \"{ withRef: true } in the options\"\n  },\n\n  46: {\n    file: \"@apollo/client/react/hoc/withApollo.js\",\n    condition: \"operationOptions.withRef\",\n\n    message: \"To access the wrapped instance, you need to specify \" +\n        \"{ withRef: true } in the options\"\n  },\n\n  47: {\n    file: \"@apollo/client/react/hooks/useApolloClient.js\",\n    condition: \"!!client\",\n\n    message: 'Could not find \"client\" in the context or passed in as an option. ' +\n        \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n        \"instance in via options.\"\n  },\n\n  49: {\n    file: \"@apollo/client/react/hooks/useReadQuery.js\",\n    condition: \"internalQueryRef.promiseCache\",\n\n    message: \"It appears that `useReadQuery` was used outside of `useBackgroundQuery`. \" +\n        \"`useReadQuery` is only supported for use with `useBackgroundQuery`. \" +\n        \"Please ensure you are passing the `queryRef` returned from `useBackgroundQuery`.\"\n  },\n\n  54: {\n    file: \"@apollo/client/react/hooks/useSuspenseQuery.js\",\n    condition: \"supportedFetchPolicies.includes(fetchPolicy)\",\n    message: \"The fetch policy `%s` is not supported with suspense.\"\n  },\n\n  57: {\n    file: \"@apollo/client/react/parser/index.js\",\n    condition: \"!!document && !!document.kind\",\n\n    message: \"Argument of %s passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\"\n  },\n\n  58: {\n    file: \"@apollo/client/react/parser/index.js\",\n    condition: \"!fragments.length ||\\n    queries.length ||\\n    mutations.length ||\\n    subscriptions.length\",\n\n    message: \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\"\n  },\n\n  59: {\n    file: \"@apollo/client/react/parser/index.js\",\n    condition: \"queries.length + mutations.length + subscriptions.length <= 1\",\n\n    message: \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        \"%s had %s queries, %s \" +\n        \"subscriptions and %s mutations. \" +\n        \"You can use 'compose' to join multiple operation types to a component\"\n  },\n\n  60: {\n    file: \"@apollo/client/react/parser/index.js\",\n    condition: \"definitions.length === 1\",\n\n    message: \"react-apollo only supports one definition per HOC. %s had \" +\n        \"%s definitions. \" +\n        \"You can use 'compose' to join multiple operation types to a component\"\n  },\n\n  61: {\n    file: \"@apollo/client/react/parser/index.js\",\n    condition: \"operation.type === type\",\n    message: \"Running a %s requires a graphql \" + \"%s, but a %s was used instead.\"\n  },\n\n  62: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"queryWithoutConnection\",\n    message: \"query is required\"\n  },\n\n  63: {\n    file: \"@apollo/client/utilities/graphql/DocumentTransform.js\",\n    condition: \"Array.isArray(cacheKeys)\",\n    message: \"`getCacheKey` must return an array or undefined\"\n  },\n\n  64: {\n    file: \"@apollo/client/utilities/graphql/directives.js\",\n    condition: \"evaledValue !== void 0\",\n    message: \"Invalid variable referenced in @%s directive.\"\n  },\n\n  65: {\n    file: \"@apollo/client/utilities/graphql/directives.js\",\n    condition: \"directiveArguments && directiveArguments.length === 1\",\n    message: \"Incorrect number of arguments for the @%s directive.\"\n  },\n\n  66: {\n    file: \"@apollo/client/utilities/graphql/directives.js\",\n    condition: \"ifArgument.name && ifArgument.name.value === 'if'\",\n    message: \"Invalid argument for the @%s directive.\"\n  },\n\n  67: {\n    file: \"@apollo/client/utilities/graphql/directives.js\",\n    condition: \"ifValue &&\\n    (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue')\",\n    message: \"Argument for the @%s directive must be a variable or a boolean value.\"\n  },\n\n  68: {\n    file: \"@apollo/client/utilities/graphql/fragments.js\",\n\n    message: \"Found a %s operation%s. \" +\n        'No operations are allowed when using a fragment as a query. Only fragments are allowed.'\n  },\n\n  69: {\n    file: \"@apollo/client/utilities/graphql/fragments.js\",\n    condition: \"fragments.length === 1\",\n    message: \"Found %s fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\"\n  },\n\n  70: {\n    file: \"@apollo/client/utilities/graphql/fragments.js\",\n    condition: \"fragment\",\n    message: \"No fragment named %s\"\n  },\n\n  71: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"doc && doc.kind === 'Document'\",\n    message: \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\"\n  },\n\n  72: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    message: \"Schema type definitions not allowed in queries. Found: \\\"%s\\\"\"\n  },\n\n  73: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"operations.length <= 1\",\n    message: \"Ambiguous GraphQL document: contains %s operations\"\n  },\n\n  74: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"queryDef && queryDef.operation === 'query'\",\n    message: 'Must contain a query definition.'\n  },\n\n  75: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"doc.kind === 'Document'\",\n    message: \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\"\n  },\n\n  76: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"doc.definitions.length <= 1\",\n    message: 'Fragment must have exactly one definition.'\n  },\n\n  77: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    condition: \"fragmentDef.kind === 'FragmentDefinition'\",\n    message: 'Must be a fragment definition.'\n  },\n\n  78: {\n    file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n    message: 'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.'\n  },\n\n  79: {\n    file: \"@apollo/client/utilities/graphql/storeUtils.js\",\n\n    message: \"The inline argument \\\"%s\\\" of kind \\\"%s\\\"\" +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.'\n  }\n};\n\nexport const devDebug = {\n  15: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    message: \"In client.refetchQueries, Promise.all promise rejected with error %o\"\n  },\n\n  22: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Missing cache result fields: %o\"\n  }\n};\n\nexport const devLog = {};\n\nexport const devWarn = {\n  4: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: \"Inferring subtype %s of supertype %s\"\n  },\n\n  5: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: \"Undefined 'from' passed to readField with arguments %s\"\n  },\n\n  12: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: \"Cache data may be lost when replacing the %s field of a %s object.\\n\\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\\n\\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\\n\\n  existing: %s\\n  incoming: %s\\n\\nFor more information about these options, please refer to the documentation:\\n\\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\\n\"\n  },\n\n  18: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Called refetch(%o) for query %o, which does not declare a $variables variable.\\nDid you mean to call refetch(variables) instead of refetch({ variables })?\"\n  },\n\n  31: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"Unknown query named \\\"%s\\\" requested in refetchQueries options.include array\"\n  },\n\n  32: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"Unknown query %s requested in refetchQueries options.include array\"\n  },\n\n  33: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"You are calling concat on a terminating link, which will have no effect %o\"\n  },\n\n  36: {\n    file: \"@apollo/client/link/http/createHttpLink.js\",\n    message: \"Multipart-subscriptions do not support @defer\"\n  },\n\n  40: {\n    file: \"@apollo/client/link/utils/toPromise.js\",\n    message: \"Promise Wrapper does not support multiple results from Observable\"\n  },\n\n  48: {\n    file: \"@apollo/client/react/hooks/useQuery.js\",\n    message: \"Calling default no-op implementation of InternalState#forceUpdate\"\n  },\n\n  50: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    message: \"'useSubscription' supports only the 'onSubscriptionData' or 'onData' option, but not both. Only the 'onData' option will be used.\"\n  },\n\n  51: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    message: \"'onSubscriptionData' is deprecated and will be removed in a future major version. Please use the 'onData' option instead.\"\n  },\n\n  52: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    message: \"'useSubscription' supports only the 'onSubscriptionComplete' or 'onComplete' option, but not both. Only the 'onComplete' option will be used.\"\n  },\n\n  53: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    message: \"'onSubscriptionComplete' is deprecated and will be removed in a future major version. Please use the 'onComplete' option instead.\"\n  },\n\n  55: {\n    file: \"@apollo/client/react/hooks/useSuspenseQuery.js\",\n    message: \"Using `returnPartialData` with a `no-cache` fetch policy has no effect. To read partial data from the cache, consider using an alternate fetch policy.\"\n  },\n\n  81: {\n    file: \"@apollo/client/utilities/graphql/transform.js\",\n\n    message: 'Removing an @connection directive even though it does not have a key. ' +\n        'You may want to use the key parameter to specify a store key.'\n  }\n};\n\nexport const devError = {\n  10: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: \"Missing field '%s' while writing result %o\"\n  },\n\n  19: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: 'Unhandled GraphQL subscription error'\n  },\n\n  21: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: 'Unhandled error'\n  },\n\n  56: {\n    file: \"@apollo/client/react/hooks/useSyncExternalStore.js\",\n    message: \"The result of getSnapshot should be cached to avoid an infinite loop\"\n  },\n\n  80: {\n    file: \"@apollo/client/utilities/graphql/transform.js\",\n    message: \"Could not find operation or fragment\"\n  }\n};\n", "import type { ErrorCodes } from \"../invariantErrorCodes.js\";\nimport { global } from \"../utilities/globals/index.js\";\nimport { ApolloErrorMessageHandler } from \"../utilities/globals/invariantWrappers.js\";\n\nexport function loadErrorMessageHandler(...errorCodes: ErrorCodes[]) {\n  if (!global[ApolloErrorMessageHandler]) {\n    global[ApolloErrorMessageHandler] = handler as typeof handler & ErrorCodes;\n  }\n\n  for (const codes of errorCodes) {\n    Object.assign(global[ApolloErrorMessageHandler], codes);\n  }\n\n  return global[ApolloErrorMessageHandler];\n\n  function handler(message: string | number, args: unknown[]) {\n    if (typeof message === \"number\") {\n      const definition = global[ApolloErrorMessageHandler]![message];\n      if (!message || !definition.message) return;\n      message = definition.message;\n    }\n    return args.reduce<string>(\n      (msg, arg) => msg.replace(\"%s\", String(arg)),\n      String(message)\n    );\n  }\n}\n", "import { devDebug, devError, devLog, devWarn } from \"../invariantErrorCodes.js\";\nimport { loadErrorMessageHandler } from \"./loadErrorMessageHandler.js\";\n\nexport function loadDevMessages() {\n  loadErrorMessageHandler(devDebug, devError, devLog, devWarn);\n}\n", "import { errorCodes } from \"../invariantErrorCodes.js\";\nimport { loadErrorMessageHandler } from \"./loadErrorMessageHandler.js\";\n\nexport function loadErrorMessages() {\n  loadErrorMessageHandler(errorCodes);\n}\n"],
  "mappings": "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",
  "names": ["errorCodes"]
}
