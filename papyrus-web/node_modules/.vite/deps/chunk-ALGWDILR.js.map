{
  "version": 3,
  "sources": ["../../../../node_modules/@material-ui/icons/UnfoldMore.js", "../../../../node_modules/@material-ui/icons/CropDin.js", "../../../../node_modules/@eclipse-sirius/sirius-components-trees/dist/sirius-components-trees.es.js"],
  "sourcesContent": ["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z\"\n}), 'UnfoldMore');\n\nexports.default = _default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"\n}), 'CropDin');\n\nexports.default = _default;", "import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { jsxs, Fragment, jsx } from \"react/jsx-runtime\";\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { useDeletionConfirmationDialog, Toast, useMultiToast, useSelection, IconOverlay, DRAG_SOURCES_TYPE } from \"@eclipse-sirius/sirius-components-core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { SwapHoriz, FilterList } from \"@material-ui/icons\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useMachine } from \"@xstate/react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CropDinIcon from \"@material-ui/icons/CropDin\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Machine, assign } from \"xstate\";\nconst TreeToolBarContext = React.createContext([]);\nconst TreeToolBarContribution = ({}) => {\n  return null;\n};\nconst deleteTreeItemMutation = gql`\n  mutation deleteTreeItem($input: DeleteTreeItemInput!) {\n    deleteTreeItem(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        message\n      }\n    }\n  }\n`;\nconst isErrorPayload = (payload) => payload.__typename === \"ErrorPayload\";\nconst TreeItemContextMenuContext = React.createContext([]);\nconst TreeItemContextMenu = ({\n  menuAnchor,\n  editingContextId,\n  treeId,\n  item,\n  readOnly,\n  treeItemMenuContributionComponents,\n  depth,\n  onExpand,\n  onExpandAll,\n  enterEditingMode,\n  onClose\n}) => {\n  const [state, setState] = useState({ message: null });\n  const { showDeletionConfirmation } = useDeletionConfirmationDialog();\n  const expandItem = () => {\n    if (!item.expanded && item.hasChildren) {\n      onExpand(item.id, depth);\n    }\n  };\n  const [deleteTreeItem, { loading: deleteTreeItemLoading, data: deleteTreeItemData, error: deleteTreeItemError }] = useMutation(deleteTreeItemMutation);\n  const deleteItem = () => {\n    const input = {\n      id: crypto.randomUUID(),\n      editingContextId,\n      representationId: treeId,\n      treeItemId: item.id\n    };\n    showDeletionConfirmation(() => {\n      deleteTreeItem({ variables: { input } });\n      onClose();\n    });\n  };\n  useEffect(() => {\n    if (!deleteTreeItemLoading) {\n      if (deleteTreeItemError) {\n        setState({\n          message: \"An error has occurred while executing this action, please contact the server administrator\"\n        });\n      }\n      if (deleteTreeItemData) {\n        const { deleteTreeItem: deleteTreeItem2 } = deleteTreeItemData;\n        if (isErrorPayload(deleteTreeItem2)) {\n          const { message } = deleteTreeItem2;\n          setState({ message });\n        }\n      }\n    }\n  }, [deleteTreeItemLoading, deleteTreeItemError, deleteTreeItemData]);\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsxs(\n      Menu,\n      {\n        id: \"treeitem-contextmenu\",\n        anchorEl: menuAnchor,\n        keepMounted: true,\n        open: true,\n        onClose,\n        \"data-testid\": \"treeitem-contextmenu\",\n        disableRestoreFocus: true,\n        getContentAnchorEl: null,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        },\n        children: [\n          treeItemMenuContributionComponents.map((component, index) => {\n            const props = {\n              editingContextId,\n              item,\n              readOnly,\n              onClose,\n              expandItem,\n              key: index.toString(),\n              treeId\n            };\n            const element = React.createElement(component, props);\n            return element;\n          }),\n          item.hasChildren ? /* @__PURE__ */ jsxs(\n            MenuItem,\n            {\n              \"data-testid\": \"expand-all\",\n              onClick: () => {\n                onExpandAll(item);\n                onClose();\n              },\n              disabled: readOnly,\n              \"aria-disabled\": true,\n              children: [\n                /* @__PURE__ */ jsx(ListItemIcon, { children: /* @__PURE__ */ jsx(UnfoldMore, { fontSize: \"small\" }) }),\n                /* @__PURE__ */ jsx(ListItemText, { primary: \"Expand all\" })\n              ]\n            },\n            \"expand-all\"\n          ) : null,\n          item.editable ? /* @__PURE__ */ jsxs(\n            MenuItem,\n            {\n              onClick: enterEditingMode,\n              \"data-testid\": \"rename-tree-item\",\n              disabled: readOnly,\n              \"aria-disabled\": true,\n              children: [\n                /* @__PURE__ */ jsx(ListItemIcon, { children: /* @__PURE__ */ jsx(EditIcon, { fontSize: \"small\" }) }),\n                /* @__PURE__ */ jsx(ListItemText, { primary: \"Rename\" })\n              ]\n            },\n            \"rename\"\n          ) : null,\n          item.deletable ? /* @__PURE__ */ jsxs(MenuItem, { onClick: deleteItem, \"data-testid\": \"delete\", disabled: readOnly, \"aria-disabled\": true, children: [\n            /* @__PURE__ */ jsx(ListItemIcon, { children: /* @__PURE__ */ jsx(DeleteIcon, { fontSize: \"small\" }) }),\n            /* @__PURE__ */ jsx(ListItemText, { primary: \"Delete\" })\n          ] }, \"delete-tree-item\") : null\n        ]\n      }\n    ),\n    /* @__PURE__ */ jsx(Toast, { message: state.message, open: !!state.message, onClose: () => setState({ message: null }) })\n  ] });\n};\nconst TreeItemContextMenuContribution = ({}) => {\n  return null;\n};\nconst splitText = (label, userInput) => {\n  if (!userInput) {\n    return [label];\n  }\n  const caseInsensitiveSplitLabel = label.toLocaleLowerCase().split(userInput.toLocaleLowerCase()).flatMap((value, index2, array) => {\n    if (index2 === 0 && value === \"\") {\n      return [];\n    } else if (index2 === array.length - 1 && value === \"\") {\n      return [userInput.toLocaleLowerCase()];\n    } else if (index2 === 0) {\n      return [value];\n    }\n    return [userInput.toLocaleLowerCase(), value];\n  });\n  const splitLabel = [];\n  let index = 0;\n  for (const caseInsensitiveSegment of caseInsensitiveSplitLabel) {\n    const caseSensitiveSegment = label.substring(index, index + caseInsensitiveSegment.length);\n    splitLabel.push(caseSensitiveSegment);\n    index = index + caseInsensitiveSegment.length;\n  }\n  return splitLabel;\n};\nconst isFilterCandidate = (treeItem, textToFilter) => {\n  let filter = false;\n  const splitLabelWithTextToHighlight = splitText(treeItem.label, textToFilter);\n  if (textToFilter === null || textToFilter === \"\") {\n    filter = false;\n  } else if (splitLabelWithTextToHighlight.length > 1) {\n    filter = false;\n  } else if (!treeItem.hasChildren && splitLabelWithTextToHighlight.length === 1 && splitLabelWithTextToHighlight[0].toLocaleLowerCase() !== textToFilter.toLocaleLowerCase()) {\n    filter = true;\n  } else if (splitLabelWithTextToHighlight.length === 1 && splitLabelWithTextToHighlight[0].toLocaleLowerCase() === textToFilter.toLocaleLowerCase()) {\n    filter = false;\n  } else if (textToFilter && treeItem.hasChildren && treeItem.expanded && treeItem.children.map((child) => child.label.toLocaleLowerCase().split(textToFilter.toLocaleLowerCase()).length).every((v) => v === 1)) {\n    filter = treeItem.children.map((child) => isFilterCandidate(child, textToFilter)).every((v) => v === true);\n  }\n  return filter;\n};\nconst useTreeToolbarStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"hidden\",\n    height: theme.spacing(4),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    borderBottomWidth: \"1px\",\n    borderBottomStyle: \"solid\",\n    justifyContent: \"right\",\n    borderBottomColor: theme.palette.divider\n  }\n}));\nconst TreeToolBar = ({\n  editingContextId,\n  onSynchronizedClick,\n  synchronized,\n  treeToolBarContributionComponents,\n  readOnly\n}) => {\n  const classes = useTreeToolbarStyles();\n  const preferenceButtonSynchroniseTitle = synchronized ? \"Disable synchronisation with representation\" : \"Enable synchronisation with representation\";\n  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsxs(\"div\", { className: classes.toolbar, children: [\n    treeToolBarContributionComponents.map((component, index) => {\n      const props = {\n        editingContextId,\n        disabled: readOnly,\n        key: index.toString()\n      };\n      const element = React.createElement(component, props);\n      return element;\n    }),\n    /* @__PURE__ */ jsx(\n      IconButton,\n      {\n        color: \"inherit\",\n        size: \"small\",\n        \"aria-label\": preferenceButtonSynchroniseTitle,\n        title: preferenceButtonSynchroniseTitle,\n        onClick: onSynchronizedClick,\n        \"data-testid\": \"tree-synchronise\",\n        children: /* @__PURE__ */ jsx(SwapHoriz, { color: synchronized ? \"inherit\" : \"disabled\" })\n      }\n    )\n  ] }) });\n};\nconst useFilterBarStyles = makeStyles((theme) => ({\n  filterbar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"hidden\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  textfield: {\n    height: theme.spacing(3),\n    fontSize: theme.typography.fontSize\n  }\n}));\nconst FilterBar = ({ onTextChange, onFilterButtonClick, onClose }) => {\n  const classes = useFilterBarStyles();\n  const initialState = {\n    filterEnabled: false\n  };\n  const [state, setState] = useState(initialState);\n  return /* @__PURE__ */ jsxs(\"div\", { className: classes.filterbar, children: [\n    /* @__PURE__ */ jsx(\n      TextField,\n      {\n        id: \"filterbar-textfield\",\n        \"data-testid\": \"filterbar-textfield\",\n        name: \"filterbar-textfield\",\n        placeholder: \"Type to filter\",\n        spellCheck: false,\n        variant: \"outlined\",\n        size: \"small\",\n        margin: \"none\",\n        autoFocus: true,\n        multiline: false,\n        fullWidth: true,\n        onChange: onTextChange,\n        InputProps: {\n          endAdornment: /* @__PURE__ */ jsx(InputAdornment, { position: \"end\", children: /* @__PURE__ */ jsx(\n            IconButton,\n            {\n              \"data-testid\": \"filterbar-filter-button\",\n              \"aria-label\": \"filter\",\n              size: \"small\",\n              onClick: () => {\n                onFilterButtonClick(!state.filterEnabled);\n                setState((prevState) => {\n                  return { filterEnabled: !prevState.filterEnabled };\n                });\n              },\n              children: /* @__PURE__ */ jsx(FilterList, { fontSize: \"small\", color: state.filterEnabled ? \"primary\" : \"secondary\" })\n            }\n          ) }),\n          className: classes.textfield\n        }\n      }\n    ),\n    /* @__PURE__ */ jsx(\n      IconButton,\n      {\n        \"data-testid\": \"filterbar-close-button\",\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: onClose,\n        children: /* @__PURE__ */ jsx(CloseIcon, { fontSize: \"small\" })\n      }\n    )\n  ] });\n};\nconst converter = {\n  convert: (tree) => tree\n};\nconst defaultContext = {\n  converter\n};\nconst ExplorerViewContext = React.createContext(defaultContext);\nconst ExplorerViewConfiguration = ({ children, converter: converter2 }) => {\n  return /* @__PURE__ */ jsx(ExplorerViewContext.Provider, { value: { converter: converter2 }, children });\n};\nconst useExplorerViewConfiguration = () => {\n  const { converter: converter2 } = useContext(ExplorerViewContext);\n  return {\n    converter: converter2\n  };\n};\nconst useTreeItemArrowStyle = makeStyles(() => ({\n  arrow: {\n    cursor: \"pointer\"\n  },\n  noChildren: {\n    paddingLeft: \"20px\"\n  }\n}));\nconst TreeItemArrow = ({ item, depth, onExpand, \"data-testid\": dataTestid }) => {\n  const classes = useTreeItemArrowStyle();\n  if (item.hasChildren) {\n    const onClick = () => onExpand(item.id, depth);\n    if (item.expanded) {\n      return /* @__PURE__ */ jsx(ExpandMoreIcon, { className: classes.arrow, style: { fontSize: 20 }, onClick, \"data-testid\": dataTestid });\n    } else {\n      return /* @__PURE__ */ jsx(\n        ChevronRightIcon,\n        {\n          className: classes.arrow,\n          style: { fontSize: 20 },\n          onClick,\n          \"data-testid\": dataTestid\n        }\n      );\n    }\n  }\n  return /* @__PURE__ */ jsx(\"div\", { className: classes.noChildren });\n};\nconst renameTreeItemMutation = gql`\n  mutation renameTreeItem($input: RenameTreeItemInput!) {\n    renameTreeItem(input: $input) {\n      __typename\n      ... on ErrorPayload {\n        message\n      }\n    }\n  }\n`;\nconst initialDirectEditElementLabeQuery = gql`\n  query initialDirectEditElementLabel($editingContextId: ID!, $representationId: ID!, $treeItemId: ID!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        representation(representationId: $representationId) {\n          description {\n            ... on TreeDescription {\n              initialDirectEditTreeItemLabel(treeItemId: $treeItemId)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst TreeItemDirectEditInput = ({\n  editingContextId,\n  treeId,\n  treeItemId,\n  editingkey,\n  onClose\n}) => {\n  const [state, setState] = useState({\n    newLabel: editingkey\n  });\n  const { addErrorMessage } = useMultiToast();\n  const isErrorPayload2 = (payload) => payload.__typename === \"ErrorPayload\";\n  const isSuccessPayload = (payload) => payload.__typename === \"SuccessPayload\";\n  const textInput = useRef(null);\n  const { data: initialLabelTreeItemItemData, error: initialLabelTreeItemItemError } = useQuery(initialDirectEditElementLabeQuery, {\n    variables: {\n      editingContextId,\n      representationId: treeId,\n      treeItemId\n    }\n  });\n  useEffect(() => {\n    let cleanup = void 0;\n    if (initialLabelTreeItemItemError) {\n      addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n    }\n    if (initialLabelTreeItemItemData == null ? void 0 : initialLabelTreeItemItemData.viewer.editingContext.representation.description.initialDirectEditTreeItemLabel) {\n      const initialLabel = initialLabelTreeItemItemData == null ? void 0 : initialLabelTreeItemItemData.viewer.editingContext.representation.description.initialDirectEditTreeItemLabel;\n      if (!editingkey) {\n        setState((prevState) => {\n          return { ...prevState, newLabel: initialLabel };\n        });\n        const timeOutId = setTimeout(() => {\n          textInput.current.select();\n        }, 0);\n        cleanup = () => clearTimeout(timeOutId);\n      }\n    }\n    return cleanup;\n  }, [initialLabelTreeItemItemError, initialLabelTreeItemItemData]);\n  const [renameTreeItem, { data: renameTreeItemData, error: renameTreeItemError }] = useMutation(renameTreeItemMutation);\n  useEffect(() => {\n    if (renameTreeItemError) {\n      addErrorMessage(\"An unexpected error has occurred, please refresh the page\");\n    }\n    if (renameTreeItemData) {\n      const { renameTreeItem: renameTreeItem2 } = renameTreeItemData;\n      if (isErrorPayload2(renameTreeItem2)) {\n        addErrorMessage(renameTreeItem2.message);\n      } else if (isSuccessPayload(renameTreeItem2)) {\n        if (renameTreeItem2.__typename === \"SuccessPayload\") {\n          onClose();\n        }\n      }\n    }\n  }, [renameTreeItemData, renameTreeItemError]);\n  const doRename = () => {\n    renameTreeItem({\n      variables: {\n        input: {\n          id: crypto.randomUUID(),\n          editingContextId,\n          representationId: treeId,\n          treeItemId,\n          newLabel: state.newLabel\n        }\n      }\n    });\n  };\n  const handleChange = (event) => {\n    const newLabel = event.target.value;\n    setState((prevState) => {\n      return { ...prevState, newLabel };\n    });\n  };\n  const onFinishEditing = (event) => {\n    const { key } = event;\n    if (key === \"Enter\") {\n      doRename();\n    } else if (key === \"Escape\") {\n      onClose();\n    }\n  };\n  const onFocusIn = (event) => event.target.select();\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", doRename);\n    return () => document.removeEventListener(\"mousedown\", doRename);\n  });\n  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(\n    TextField,\n    {\n      name: \"name\",\n      size: \"small\",\n      inputRef: textInput,\n      placeholder: \"Enter the new value\",\n      value: state.newLabel,\n      onChange: handleChange,\n      onFocus: onFocusIn,\n      onKeyDown: onFinishEditing,\n      autoFocus: true,\n      \"data-testid\": \"name-edit\"\n    }\n  ) });\n};\nconst useTreeItemStyle = makeStyles((theme) => ({\n  treeItem: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"24px\",\n    gap: theme.spacing(0.5),\n    alignItems: \"center\",\n    userSelect: \"none\",\n    \"&:focus-within\": {\n      borderWidth: \"1px\",\n      borderColor: \"black\",\n      borderStyle: \"dotted\"\n    }\n  },\n  treeItemHover: {\n    backgroundColor: theme.palette.action.hover\n  },\n  selected: {\n    backgroundColor: theme.palette.action.selected,\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.selected\n    }\n  },\n  nonSelectable: {\n    opacity: 0.6\n  },\n  arrow: {\n    cursor: \"pointer\"\n  },\n  more: {\n    hover: {\n      backgroundColor: theme.palette.action.hover\n    },\n    focus: {\n      backgroundColor: theme.palette.action.selected\n    }\n  },\n  expandIcon: {\n    marginLeft: \"auto\",\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    display: \"grid\",\n    gridTemplateRows: \"1fr\",\n    gridTemplateColumns: \"1fr 20px\",\n    columnGap: \"8px\",\n    alignItems: \"center\",\n    gridColumnStart: \"2\",\n    gridColumnEnd: \"3\"\n  },\n  imageAndLabel: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: \"4px\",\n    alignItems: \"center\"\n  },\n  imageAndLabelSelectable: {\n    cursor: \"pointer\"\n  },\n  label: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    maxWidth: \"100ch\"\n  },\n  selectedLabel: {\n    fontWeight: \"bold\"\n  },\n  marked: {\n    fontWeight: \"bold\"\n  },\n  ul: {\n    marginLeft: theme.spacing(3)\n  },\n  highlight: {\n    backgroundColor: theme.palette.navigation.leftBackground\n  }\n}));\nconst directEditActivationValidCharacters = /[\\w&é§èàùçÔØÁÛÊË\"«»’”„´$¥€£\\\\¿?!=+-,;:%/{}[\\]–#@*.]/;\nconst TreeItem = ({\n  editingContextId,\n  treeId,\n  item,\n  depth,\n  onExpand,\n  onExpandAll,\n  readOnly,\n  textToHighlight,\n  textToFilter,\n  enableMultiSelection,\n  markedItemIds\n}) => {\n  var _a;\n  const classes = useTreeItemStyle();\n  const treeItemMenuContributionComponents = useContext(TreeItemContextMenuContext).filter((contribution) => contribution.props.canHandle(treeId, item)).map((contribution) => contribution.props.component);\n  const initialState = {\n    showContextMenu: false,\n    menuAnchor: null,\n    editingMode: false,\n    label: item.label,\n    prevSelectionId: null,\n    editingkey: \"\"\n  };\n  const [state, setState] = useState(initialState);\n  const { showContextMenu, menuAnchor, editingMode } = state;\n  const refDom = useRef();\n  const { selection, setSelection } = useSelection();\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const openContextMenu = (event) => {\n    if (!showContextMenu) {\n      const { currentTarget } = event;\n      setState((prevState) => {\n        return {\n          showContextMenu: true,\n          menuAnchor: currentTarget,\n          editingMode: false,\n          editingkey: prevState.editingkey,\n          label: item.label,\n          prevSelectionId: prevState.prevSelectionId\n        };\n      });\n    }\n  };\n  let contextMenu = null;\n  if (showContextMenu) {\n    const closeContextMenu = () => {\n      setState((prevState) => {\n        return {\n          modalDisplayed: null,\n          showContextMenu: false,\n          menuAnchor: null,\n          editingMode: false,\n          editingkey: prevState.editingkey,\n          label: item.label,\n          prevSelectionId: prevState.prevSelectionId\n        };\n      });\n    };\n    const enterEditingMode = () => {\n      setState((prevState) => {\n        return {\n          modalDisplayed: null,\n          showContextMenu: false,\n          menuAnchor: null,\n          editingMode: true,\n          editingkey: prevState.editingkey,\n          label: item.label,\n          prevSelectionId: prevState.prevSelectionId\n        };\n      });\n    };\n    contextMenu = /* @__PURE__ */ jsx(\n      TreeItemContextMenu,\n      {\n        menuAnchor,\n        editingContextId,\n        treeId,\n        item,\n        readOnly,\n        treeItemMenuContributionComponents,\n        depth,\n        onExpand,\n        onExpandAll,\n        enterEditingMode,\n        onClose: closeContextMenu\n      }\n    );\n  }\n  let children = null;\n  if (item.expanded && item.children) {\n    children = /* @__PURE__ */ jsx(\"ul\", { className: classes.ul, children: item.children.map((childItem) => {\n      return /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(\n        TreeItem,\n        {\n          editingContextId,\n          treeId,\n          item: childItem,\n          depth: depth + 1,\n          onExpand,\n          onExpandAll,\n          enableMultiSelection,\n          readOnly,\n          textToHighlight,\n          textToFilter,\n          markedItemIds\n        }\n      ) }, childItem.id);\n    }) });\n  }\n  let className = classes.treeItem;\n  let dataTestid = void 0;\n  const selected = selection.entries.find((entry) => entry.id === item.id);\n  if (selected) {\n    className = `${className} ${classes.selected}`;\n    dataTestid = \"selected\";\n  }\n  if (isHovered && item.selectable) {\n    className = `${className} ${classes.treeItemHover}`;\n  }\n  useEffect(() => {\n    var _a2, _b;\n    if (selected) {\n      if ((_a2 = refDom.current) == null ? void 0 : _a2.scrollIntoViewIfNeeded) {\n        refDom.current.scrollIntoViewIfNeeded(true);\n      } else {\n        (_b = refDom.current) == null ? void 0 : _b.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  }, [selected]);\n  let image = /* @__PURE__ */ jsx(CropDinIcon, {});\n  if (((_a = item.iconURL) == null ? void 0 : _a.length) > 0) {\n    image = /* @__PURE__ */ jsx(IconOverlay, { iconURL: item.iconURL, alt: item.kind });\n  }\n  let text;\n  const onCloseEditingMode = () => {\n    setState((prevState) => {\n      return { ...prevState, editingMode: false };\n    });\n    refDom.current.focus();\n  };\n  const marked = markedItemIds.some((id) => id === item.id);\n  if (editingMode) {\n    text = /* @__PURE__ */ jsx(\n      TreeItemDirectEditInput,\n      {\n        editingContextId,\n        treeId,\n        treeItemId: item.id,\n        editingkey: state.editingkey,\n        onClose: onCloseEditingMode\n      }\n    );\n  } else {\n    let itemLabel;\n    const splitLabelWithTextToHighlight = splitText(item.label, textToHighlight);\n    if (textToHighlight === null || textToHighlight === \"\" || splitLabelWithTextToHighlight.length === 1 && splitLabelWithTextToHighlight[0].toLocaleLowerCase() !== item.label.toLocaleLowerCase()) {\n      itemLabel = /* @__PURE__ */ jsx(Fragment, { children: item.label });\n    } else {\n      const languages = Array.from(navigator.languages);\n      itemLabel = /* @__PURE__ */ jsx(Fragment, { children: splitLabelWithTextToHighlight.map((value, index) => {\n        const shouldHighlight = value.localeCompare(textToHighlight, languages, { sensitivity: \"base\" }) === 0;\n        return /* @__PURE__ */ jsx(\n          \"span\",\n          {\n            \"data-testid\": `${item.label}-${value}-${index}`,\n            className: shouldHighlight ? classes.highlight : \"\",\n            children: value\n          },\n          value + index\n        );\n      }) });\n    }\n    text = /* @__PURE__ */ jsx(\n      Typography,\n      {\n        variant: \"body2\",\n        className: `${classes.label} ${selected ? classes.selectedLabel : \"\"} ${marked ? classes.marked : \"\"}`,\n        children: itemLabel\n      }\n    );\n  }\n  const onClick = (event) => {\n    if (!state.editingMode) {\n      refDom.current.focus();\n      if (!item.selectable) {\n        return;\n      }\n      if ((event.ctrlKey || event.metaKey) && enableMultiSelection) {\n        event.stopPropagation();\n        const isItemInSelection = selection.entries.find((entry) => entry.id === item.id);\n        if (isItemInSelection) {\n          const newSelection = { entries: selection.entries.filter((entry) => entry.id !== item.id) };\n          setSelection(newSelection);\n        } else {\n          const { id, label, kind } = item;\n          const newEntry = { id, label, kind };\n          const newSelection = { entries: [...selection.entries, newEntry] };\n          setSelection(newSelection);\n        }\n      } else {\n        const { id, label, kind } = item;\n        setSelection({ entries: [{ id, label, kind }] });\n      }\n    }\n  };\n  const onBeginEditing = (event) => {\n    if (!item.editable || editingMode || readOnly) {\n      return;\n    }\n    const { key } = event;\n    if ((event.altKey || event.shiftKey) && event.getModifierState(key)) {\n      return;\n    }\n    const validFirstInputChar = !event.metaKey && !event.ctrlKey && key.length === 1 && directEditActivationValidCharacters.test(key);\n    if (validFirstInputChar) {\n      setState((prevState) => {\n        return { ...prevState, editingMode: true, editingkey: key };\n      });\n    }\n  };\n  const dragStart = (event) => {\n    const isDraggedItemSelected = selection.entries.map((entry) => entry.id).includes(item.id);\n    if (!isDraggedItemSelected) {\n      const itemEntry = { id: item.id, label: item.label, kind: item.kind };\n      event.dataTransfer.setData(DRAG_SOURCES_TYPE, JSON.stringify([itemEntry]));\n    } else if (selection.entries.length > 0) {\n      event.dataTransfer.setData(DRAG_SOURCES_TYPE, JSON.stringify(selection.entries));\n    }\n  };\n  const dragOver = (event) => {\n    event.stopPropagation();\n  };\n  let tooltipText = \"\";\n  if (item.kind.startsWith(\"siriusComponents://semantic\")) {\n    const query = item.kind.substring(item.kind.indexOf(\"?\") + 1, item.kind.length);\n    const params = new URLSearchParams(query);\n    if (params.has(\"domain\") && params.has(\"entity\")) {\n      tooltipText = params.get(\"domain\") + \"::\" + params.get(\"entity\");\n    }\n  } else if (item.kind.startsWith(\"siriusComponents://representation\")) {\n    const query = item.kind.substring(item.kind.indexOf(\"?\") + 1, item.kind.length);\n    const params = new URLSearchParams(query);\n    if (params.has(\"type\")) {\n      tooltipText = params.get(\"type\");\n    }\n  }\n  const shouldDisplayMoreButton = item.deletable || item.editable || treeItemMenuContributionComponents.length > 0;\n  let currentTreeItem;\n  if (textToFilter && isFilterCandidate(item, textToFilter)) {\n    currentTreeItem = null;\n  } else {\n    currentTreeItem = /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsxs(\n        \"div\",\n        {\n          className,\n          draggable: true,\n          onClick,\n          onDragStart: dragStart,\n          onDragOver: dragOver,\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          children: [\n            /* @__PURE__ */ jsx(TreeItemArrow, { item, depth, onExpand, \"data-testid\": `${item.label}-toggle` }),\n            /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                ref: refDom,\n                tabIndex: 0,\n                onKeyDown: onBeginEditing,\n                \"data-treeitemid\": item.id,\n                \"data-treeitemlabel\": item.label,\n                \"data-treeitemkind\": item.kind,\n                \"data-haschildren\": item.hasChildren.toString(),\n                \"data-depth\": depth,\n                \"data-expanded\": item.expanded.toString(),\n                \"data-testid\": dataTestid,\n                children: /* @__PURE__ */ jsxs(\"div\", { className: `${classes.content} ${item.selectable ? \"\" : classes.nonSelectable}`, children: [\n                  /* @__PURE__ */ jsxs(\n                    \"div\",\n                    {\n                      className: `${classes.imageAndLabel} ${item.selectable ? classes.imageAndLabelSelectable : \"\"}`,\n                      onDoubleClick: () => item.hasChildren && onExpand(item.id, depth),\n                      title: tooltipText,\n                      \"data-testid\": item.label,\n                      children: [\n                        image,\n                        text\n                      ]\n                    }\n                  ),\n                  shouldDisplayMoreButton ? /* @__PURE__ */ jsx(\n                    IconButton,\n                    {\n                      className: classes.more,\n                      size: \"small\",\n                      onClick: openContextMenu,\n                      \"data-testid\": `${item.label}-more`,\n                      children: /* @__PURE__ */ jsx(MoreVertIcon, { style: { fontSize: 12 } })\n                    }\n                  ) : null\n                ] })\n              }\n            ),\n            !shouldDisplayMoreButton && isHovered && item.hasChildren && /* @__PURE__ */ jsx(\n              IconButton,\n              {\n                className: classes.expandIcon,\n                size: \"small\",\n                \"data-testid\": \"expand-all\",\n                title: \"expand all\",\n                onClick: () => {\n                  onExpandAll(item);\n                },\n                children: /* @__PURE__ */ jsx(UnfoldMore, { style: { fontSize: 12 } })\n              }\n            )\n          ]\n        }\n      ),\n      children,\n      contextMenu\n    ] });\n  }\n  return /* @__PURE__ */ jsx(Fragment, { children: currentTreeItem });\n};\nconst useTreeStyle = makeStyles((_) => ({\n  ul: {\n    width: \"inherit\",\n    minWidth: \"fit-content\"\n  }\n}));\nconst Tree = ({\n  editingContextId,\n  tree,\n  onExpand,\n  onExpandAll,\n  readOnly,\n  enableMultiSelection = true,\n  textToHighlight,\n  textToFilter,\n  markedItemIds\n}) => {\n  const classes = useTreeStyle();\n  const treeElement = useRef(null);\n  useEffect(() => {\n    const downHandler = (event) => {\n      if ((event.key === \"ArrowLeft\" || event.key === \"ArrowRight\" || event.key === \"ArrowUp\" || event.key === \"ArrowDown\") && event.target.tagName !== \"INPUT\") {\n        event.preventDefault();\n        const previousItem = document.activeElement;\n        const dataset = previousItem.dataset;\n        if (dataset.treeitemid) {\n          const treeItemDomElements = document.querySelectorAll(\"[data-treeitemid]\");\n          const index = Array.from(treeItemDomElements).indexOf(previousItem);\n          const id = dataset.treeitemid;\n          const hasChildren = dataset.haschildren === \"true\";\n          const isExpanded = dataset.expanded === \"true\";\n          switch (event.key) {\n            case \"ArrowLeft\":\n              if (hasChildren && isExpanded) {\n                onExpand(id, dataset.depth);\n              } else if (index > 0) {\n                const parentDepth = (dataset.depth - 1).toString();\n                let positionFromParent = 0;\n                while (!(treeItemDomElements[index - positionFromParent].dataset.depth === parentDepth)) {\n                  positionFromParent++;\n                }\n                treeItemDomElements[index - positionFromParent].click();\n              }\n              break;\n            case \"ArrowRight\":\n              if (hasChildren && !isExpanded) {\n                onExpand(id, dataset.depth);\n              } else if (index < treeItemDomElements.length - 1) {\n                treeItemDomElements[index + 1].click();\n              }\n              break;\n            case \"ArrowUp\":\n              if (index > 0) {\n                treeItemDomElements[index - 1].click();\n              }\n              break;\n            case \"ArrowDown\":\n              if (index < treeItemDomElements.length - 1) {\n                treeItemDomElements[index + 1].click();\n              }\n              break;\n          }\n        }\n      }\n    };\n    const element = treeElement == null ? void 0 : treeElement.current;\n    if (element) {\n      element.addEventListener(\"keydown\", downHandler);\n      return () => {\n        element.removeEventListener(\"keydown\", downHandler);\n      };\n    }\n    return null;\n  }, [treeElement, onExpand]);\n  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(\"div\", { ref: treeElement, children: /* @__PURE__ */ jsx(\"ul\", { className: classes.ul, \"data-testid\": \"tree-root-elements\", children: tree.children.map((item) => /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(\n    TreeItem,\n    {\n      editingContextId,\n      treeId: tree.id,\n      item,\n      depth: 1,\n      onExpand,\n      onExpandAll,\n      enableMultiSelection,\n      readOnly,\n      textToHighlight,\n      textToFilter,\n      markedItemIds\n    }\n  ) }, item.id)) }) }) });\n};\nconst isTreeRefreshedEventPayload = (payload) => payload.__typename === \"TreeRefreshedEventPayload\";\nconst treeViewMachine = Machine(\n  {\n    type: \"parallel\",\n    context: {\n      id: crypto.randomUUID(),\n      tree: null,\n      expanded: [],\n      maxDepth: 1,\n      autoExpandToRevealSelection: true,\n      treeItemToExpandAll: null,\n      synchronizedWithSelection: true,\n      message: null\n    },\n    states: {\n      toast: {\n        initial: \"hidden\",\n        states: {\n          hidden: {\n            on: {\n              SHOW_TOAST: {\n                target: \"visible\",\n                actions: \"setMessage\"\n              }\n            }\n          },\n          visible: {\n            on: {\n              HIDE_TOAST: {\n                target: \"hidden\",\n                actions: \"clearMessage\"\n              }\n            }\n          }\n        }\n      },\n      treeView: {\n        initial: \"idle\",\n        states: {\n          idle: {\n            on: {\n              HANDLE_SUBSCRIPTION_RESULT: [\n                {\n                  cond: \"isTreeRefreshedEventPayload\",\n                  target: \"ready\",\n                  actions: \"handleSubscriptionResult\"\n                },\n                {\n                  target: \"idle\",\n                  actions: \"handleSubscriptionResult\"\n                }\n              ]\n            }\n          },\n          ready: {\n            on: {\n              HANDLE_SUBSCRIPTION_RESULT: {\n                target: \"ready\",\n                actions: \"handleSubscriptionResult\"\n              },\n              AUTO_EXPAND_TO_REVEAL_SELECTION: {\n                actions: \"autoExpandToRevealSelection\"\n              },\n              HANDLE_EXPANDED: {\n                actions: \"expand\"\n              },\n              HANDLE_ON_EXPAND_ALL: {\n                actions: \"onExpandAll\"\n              },\n              HANDLE_EXPAND_ALL_TREE_PATH: {\n                actions: \"expandAllTreePath\"\n              },\n              HANDLE_TREE_PATH: {\n                actions: \"handleTreePath\"\n              },\n              HANDLE_COMPLETE: {\n                target: \"complete\"\n              },\n              SYNCHRONIZE_WITH_SELECTION: {\n                actions: \"synchronizeWithSelection\"\n              }\n            }\n          },\n          complete: {\n            type: \"final\"\n          }\n        }\n      }\n    }\n  },\n  {\n    guards: {\n      isTreeRefreshedEventPayload: (_, event) => {\n        const { result } = event;\n        const { data } = result;\n        return isTreeRefreshedEventPayload(data.treeEvent);\n      }\n    },\n    actions: {\n      handleSubscriptionResult: assign((_, event) => {\n        const { result } = event;\n        const { data } = result;\n        if (isTreeRefreshedEventPayload(data.treeEvent)) {\n          const { tree } = data.treeEvent;\n          return { tree };\n        }\n        return {};\n      }),\n      synchronizeWithSelection: assign((_, event) => {\n        const { synchronizedWithSelection } = event;\n        if (synchronizedWithSelection) {\n          return { synchronizedWithSelection, autoExpandToRevealSelection: true };\n        }\n        return { synchronizedWithSelection, autoExpandToRevealSelection: false };\n      }),\n      autoExpandToRevealSelection: assign((context, event) => {\n        const { autoExpandToRevealSelection } = event;\n        const { synchronizedWithSelection } = context;\n        if (synchronizedWithSelection) {\n          return { autoExpandToRevealSelection };\n        }\n        return {};\n      }),\n      expand: assign((context, event) => {\n        const { expanded, maxDepth } = context;\n        const { id, depth } = event;\n        if (expanded.includes(id)) {\n          const newExpanded = [...expanded];\n          newExpanded.splice(newExpanded.indexOf(id), 1);\n          return { expanded: newExpanded, autoExpandToRevealSelection: false, maxDepth: Math.max(maxDepth, depth) };\n        }\n        return { expanded: [...expanded, id], maxDepth: Math.max(maxDepth, depth) };\n      }),\n      onExpandAll: assign((_, event) => {\n        const { treeItemId } = event;\n        return { treeItemToExpandAll: treeItemId };\n      }),\n      expandAllTreePath: assign((context, event) => {\n        var _a, _b;\n        const { expanded, maxDepth } = context;\n        const { expandAllTreePathData } = event;\n        if ((_b = (_a = expandAllTreePathData.viewer) == null ? void 0 : _a.editingContext) == null ? void 0 : _b.expandAllTreePath) {\n          const { treeItemIdsToExpand, maxDepth: expandedMaxDepth } = expandAllTreePathData.viewer.editingContext.expandAllTreePath;\n          const newExpanded = [...expanded];\n          treeItemIdsToExpand == null ? void 0 : treeItemIdsToExpand.forEach((itemToExpand) => {\n            if (!expanded.includes(itemToExpand)) {\n              newExpanded.push(itemToExpand);\n            }\n          });\n          return {\n            expanded: newExpanded,\n            maxDepth: Math.max(expandedMaxDepth, maxDepth),\n            treeItemToExpandAll: null\n          };\n        }\n        return { treeItemToExpandAll: null };\n      }),\n      handleTreePath: assign((context, event) => {\n        var _a, _b;\n        const { expanded, maxDepth } = context;\n        const { treePathData } = event;\n        if ((_b = (_a = treePathData.viewer) == null ? void 0 : _a.editingContext) == null ? void 0 : _b.treePath) {\n          const { treeItemIdsToExpand, maxDepth: expandedMaxDepth } = treePathData.viewer.editingContext.treePath;\n          const newExpanded = [...expanded];\n          treeItemIdsToExpand == null ? void 0 : treeItemIdsToExpand.forEach((itemToExpand) => {\n            if (!expanded.includes(itemToExpand)) {\n              newExpanded.push(itemToExpand);\n            }\n          });\n          return { expanded: newExpanded, maxDepth: Math.max(expandedMaxDepth, maxDepth) };\n        }\n        return {};\n      }),\n      setMessage: assign((_, event) => {\n        const { message } = event;\n        return { message };\n      }),\n      clearMessage: assign((_) => {\n        return { message: null };\n      })\n    }\n  }\n);\nconst getTreeEventSubscription = (depth) => {\n  const treeChildren = recursiveGetChildren(depth);\n  const subscription = `\nsubscription treeEvent($input: TreeEventInput!) {\n  treeEvent(input: $input) {\n    __typename\n    ... on TreeRefreshedEventPayload {\n      id\n      tree {\n        id\n        children {\n          ${treeChildren}\n        }\n      }\n    }\n  }\n}\n`;\n  return subscription + fragment;\n};\nconst fragment = `\nfragment treeItemFields on TreeItem {\n  id\n  hasChildren\n  expanded\n  label\n  editable\n  deletable\n  selectable\n  kind\n  iconURL\n}\n`;\nconst recursiveGetChildren = (depth) => {\n  let children = \"\";\n  if (depth > 0) {\n    children = `\n    children {\n      ${recursiveGetChildren(depth - 1)}\n    }`;\n  }\n  return `...treeItemFields${children}`;\n};\nconst getTreePathQuery = gql`\n  query getTreePath($editingContextId: ID!, $treeId: ID!, $selectionEntryIds: [ID!]!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        treePath(treeId: $treeId, selectionEntryIds: $selectionEntryIds) {\n          treeItemIdsToExpand\n          maxDepth\n        }\n      }\n    }\n  }\n`;\nconst getExpandAllTreePathQuery = gql`\n  query getExpandAllTreePath($editingContextId: ID!, $treeId: ID!, $treeItemId: ID!) {\n    viewer {\n      editingContext(editingContextId: $editingContextId) {\n        expandAllTreePath(treeId: $treeId, treeItemId: $treeItemId) {\n          treeItemIdsToExpand\n          maxDepth\n        }\n      }\n    }\n  }\n`;\nconst TreeView = ({\n  editingContextId,\n  readOnly,\n  treeId,\n  enableMultiSelection,\n  synchronizedWithSelection,\n  textToHighlight,\n  textToFilter,\n  markedItemIds = [],\n  converter: converter2\n}) => {\n  const [{ value, context }, dispatch] = useMachine(treeViewMachine, {\n    context: {\n      synchronizedWithSelection\n    }\n  });\n  const { selection } = useSelection();\n  const { toast, treeView } = value;\n  const { id, tree, expanded, maxDepth, autoExpandToRevealSelection, treeItemToExpandAll, message } = context;\n  const [getTreePath, { loading: treePathLoading, data: treePathData, error: treePathError }] = useLazyQuery(getTreePathQuery);\n  const [\n    getExpandAllTreePath,\n    { loading: expandAllTreePathLoading, data: expandAllTreePathData, error: expandAllTreePathError }\n  ] = useLazyQuery(getExpandAllTreePathQuery);\n  const selectionKey = selection == null ? void 0 : selection.entries.map((entry) => entry.id).sort().join(\":\");\n  useEffect(() => {\n    if (tree && autoExpandToRevealSelection) {\n      const variables = {\n        editingContextId,\n        treeId: tree.id,\n        selectionEntryIds: selection.entries.map((entry) => entry.id)\n      };\n      getTreePath({ variables });\n    }\n  }, [editingContextId, tree, selectionKey, autoExpandToRevealSelection, getTreePath]);\n  useEffect(() => {\n    if (!treePathLoading) {\n      if (treePathData) {\n        const handleTreePathEvent = { type: \"HANDLE_TREE_PATH\", treePathData };\n        dispatch(handleTreePathEvent);\n      }\n      if (treePathError) {\n        const { message: message2 } = treePathError;\n        const showToastEvent = { type: \"SHOW_TOAST\", message: message2 };\n        dispatch(showToastEvent);\n      }\n    }\n  }, [treePathLoading, treePathData, treePathError]);\n  useEffect(() => {\n    if (tree && treeItemToExpandAll) {\n      const variables = {\n        editingContextId,\n        treeId: tree.id,\n        treeItemId: treeItemToExpandAll\n      };\n      getExpandAllTreePath({ variables });\n    }\n  }, [editingContextId, tree, treeItemToExpandAll, getExpandAllTreePathQuery]);\n  useEffect(() => {\n    if (!expandAllTreePathLoading) {\n      if (expandAllTreePathData) {\n        const handleExpandAllTreePathEvent = {\n          type: \"HANDLE_EXPAND_ALL_TREE_PATH\",\n          expandAllTreePathData\n        };\n        dispatch(handleExpandAllTreePathEvent);\n      }\n      if (expandAllTreePathError) {\n        const { message: message2 } = expandAllTreePathError;\n        const showToastEvent = { type: \"SHOW_TOAST\", message: message2 };\n        dispatch(showToastEvent);\n      }\n    }\n  }, [expandAllTreePathLoading, expandAllTreePathData, expandAllTreePathError]);\n  const { error } = useSubscription(gql(getTreeEventSubscription(maxDepth)), {\n    variables: {\n      input: {\n        id,\n        treeId,\n        editingContextId,\n        expanded\n      }\n    },\n    fetchPolicy: \"no-cache\",\n    skip: treeView === \"complete\",\n    onData: ({ data }) => {\n      const handleDataEvent = {\n        type: \"HANDLE_SUBSCRIPTION_RESULT\",\n        result: data\n      };\n      dispatch(handleDataEvent);\n    },\n    onComplete: () => {\n      const completeEvent = { type: \"HANDLE_COMPLETE\" };\n      dispatch(completeEvent);\n    }\n  });\n  useEffect(() => {\n    if (error) {\n      const { message: message2 } = error;\n      const showToastEvent = { type: \"SHOW_TOAST\", message: message2 };\n      dispatch(showToastEvent);\n    }\n  }, [error, dispatch]);\n  useEffect(() => {\n    const autoExpandToRevealSelectionEvent = {\n      type: \"AUTO_EXPAND_TO_REVEAL_SELECTION\",\n      autoExpandToRevealSelection: true\n    };\n    dispatch(autoExpandToRevealSelectionEvent);\n  }, [selection]);\n  useEffect(() => {\n    const synchronizeWithSelectionEvent = {\n      type: \"SYNCHRONIZE_WITH_SELECTION\",\n      synchronizedWithSelection\n    };\n    dispatch(synchronizeWithSelectionEvent);\n  }, [synchronizedWithSelection]);\n  const onExpand = (id2, depth) => {\n    const handleExpandedEvent = { type: \"HANDLE_EXPANDED\", id: id2, depth };\n    dispatch(handleExpandedEvent);\n  };\n  const onExpandAll = (treeItem) => {\n    const handleOnExpandAllEvent = { type: \"HANDLE_ON_EXPAND_ALL\", treeItemId: treeItem.id };\n    dispatch(handleOnExpandAllEvent);\n  };\n  const treeConverter = converter2 ? converter2 : { convert: (gqlTree) => gqlTree };\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(\"div\", { \"data-testid\": treeId, children: tree ? /* @__PURE__ */ jsx(\n      Tree,\n      {\n        editingContextId,\n        tree: treeConverter.convert(tree),\n        onExpand,\n        onExpandAll,\n        readOnly,\n        enableMultiSelection,\n        markedItemIds,\n        textToFilter,\n        textToHighlight\n      }\n    ) : null }),\n    /* @__PURE__ */ jsx(\n      Toast,\n      {\n        message,\n        open: toast === \"visible\",\n        onClose: () => dispatch({ type: \"HIDE_TOAST\" })\n      }\n    )\n  ] });\n};\nconst useStyles = makeStyles((theme) => ({\n  treeView: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  treeContent: {\n    paddingTop: theme.spacing(1),\n    flexGrow: 1,\n    overflow: \"auto\"\n  }\n}));\nconst ExplorerView = (props) => {\n  const styles = useStyles();\n  const { converter: converter2 } = useExplorerViewConfiguration();\n  const initialState = {\n    synchronizedWithSelection: true,\n    filterBar: false,\n    filterBarText: \"\",\n    filterBarTreeFiltering: false\n  };\n  const [state, setState] = useState(initialState);\n  const treeToolBarContributionComponents = useContext(TreeToolBarContext).map(\n    (contribution) => contribution.props.component\n  );\n  const treeElement = useRef(null);\n  useEffect(() => {\n    const downHandler = (event) => {\n      if ((event.ctrlKey === true || event.metaKey === true) && event.key === \"f\" && event.target.tagName !== \"INPUT\") {\n        event.preventDefault();\n        setState((prevState) => {\n          return { ...prevState, filterBar: true, filterBarText: \"\", filterBarTreeFiltering: false };\n        });\n      }\n    };\n    const element = treeElement == null ? void 0 : treeElement.current;\n    if (element) {\n      element.addEventListener(\"keydown\", downHandler);\n      return () => {\n        element.removeEventListener(\"keydown\", downHandler);\n      };\n    }\n    return null;\n  }, [treeElement]);\n  let filterBar;\n  if (state.filterBar) {\n    filterBar = /* @__PURE__ */ jsx(\n      FilterBar,\n      {\n        onTextChange: (event) => {\n          const {\n            target: { value }\n          } = event;\n          setState((prevState) => {\n            return { ...prevState, filterBarText: value };\n          });\n        },\n        onFilterButtonClick: (enabled) => setState((prevState) => {\n          return { ...prevState, filterBarTreeFiltering: enabled };\n        }),\n        onClose: () => setState((prevState) => {\n          return { ...prevState, filterBar: false, filterBarText: \"\", filterBarTreeFiltering: false };\n        })\n      }\n    );\n  }\n  return /* @__PURE__ */ jsxs(\"div\", { className: styles.treeView, ref: treeElement, children: [\n    /* @__PURE__ */ jsx(\n      TreeToolBar,\n      {\n        ...props,\n        onSynchronizedClick: () => setState((prevState) => {\n          return { ...prevState, synchronizedWithSelection: !state.synchronizedWithSelection };\n        }),\n        synchronized: state.synchronizedWithSelection,\n        treeToolBarContributionComponents\n      }\n    ),\n    /* @__PURE__ */ jsxs(\"div\", { className: styles.treeContent, children: [\n      filterBar,\n      /* @__PURE__ */ jsx(\n        TreeView,\n        {\n          ...props,\n          treeId: \"explorer://\",\n          enableMultiSelection: true,\n          synchronizedWithSelection: state.synchronizedWithSelection,\n          textToHighlight: state.filterBarText,\n          textToFilter: state.filterBarTreeFiltering ? state.filterBarText : null,\n          converter: converter2\n        }\n      )\n    ] })\n  ] });\n};\nexport {\n  ExplorerView,\n  ExplorerViewConfiguration,\n  TreeItemContextMenu,\n  TreeItemContextMenuContext,\n  TreeItemContextMenuContribution,\n  TreeToolBarContext,\n  TreeToolBarContribution,\n  TreeView,\n  isFilterCandidate,\n  splitText,\n  useExplorerViewConfiguration\n};\n"],
  "mappings": "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",
  "names": ["React", "React", "React", "UnfoldMore", "EditIcon", "DeleteIcon", "CloseIcon", "ExpandMoreIcon", "ChevronRightIcon", "CropDinIcon", "MoreVertIcon"]
}
